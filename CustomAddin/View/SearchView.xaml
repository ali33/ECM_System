<Window x:Class="Ecm.CustomAddin.View.SearchView"
        Language="{UICulture}"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cv="clr-namespace:Ecm.CustomAddin.Converter"
        xmlns:CustomControl="clr-namespace:Ecm.CustomControl;assembly=CustomControl"
        ResizeMode="CanMinimize" 
        Width="900" 
        Height="700" 
        WindowStartupLocation="CenterScreen" 
        WindowStyle="SingleBorderWindow" 
        Icon="../Resources/Logo.ico"
        Title="Search Files">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Silver.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <DataTemplate x:Key="ThumbnailTemplate">
                <Image Source="{Binding Path=FileExtension, Converter={StaticResource ThumbnailConverter}}" Width="16" Height="16"/>
            </DataTemplate>
            <ContextMenu x:Key="SearchResultContextMenu" Background="Gray" MinWidth="200" HasDropShadow="True">
                <MenuItem Header="{Resx ResxName=ExcelImport.SearchView,Key=mnOpen}" Command="{Binding Path=DataContext.OpenDocumentCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                    <!--<MenuItem.Header>
                        <TextBlock Text="{Resx ResxName=Ecm.Audit.SearchView, Key=mnOpen.Text}" x:Name="mnOpen"/>
                    </MenuItem.Header>-->
                    <MenuItem.Icon>
                        <Image Source="../Resources/Images/document.png" Margin="2" Width="22" Height="22"/>
                    </MenuItem.Icon>
                </MenuItem>
                <!--<MenuItem Header="{Resx ResxName=ExcelImport.SearchView,Key=mnPrint}" Click="PrintClick"
                          Visibility="{Binding Path=DataContext.EnablePrint, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                    <MenuItem.Header>
                        <TextBlock Text="{Resx ResxName=Ecm.Audit.SearchView,Key=mnPrint.Text}" x:Name="mnPrint" />
                    </MenuItem.Header>
                    <MenuItem.Icon>
                        <Image Source="../Resources/Images/printer.png" Margin="2" Width="22" Height="22"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Resx ResxName=ExcelImport.SearchView,Key=mnEmail}" Click="EmailClick"
                          Visibility="{Binding Path=DataContext.EnableEmail, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                    <MenuItem.Icon>
                        <Image Source="../Resources/Images/mail.png" Margin="2" Width="22" Height="22"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="{Resx ResxName=ExcelImport.SearchView,Key=mnDownload}" Click="DownloadClick"
                          Visibility="{Binding Path=DataContext.EnableEmail, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}">
                    <MenuItem.Icon>
                        <Image Source="../Resources/Images/down.png" Margin="2" Width="22" Height="22"/>
                    </MenuItem.Icon>
                </MenuItem>-->
                <MenuItem Header="{Resx ResxName=ExcelImport.SearchView,Key=mnDelete}" Visibility="{Binding Path=DataContext.EnableDelete, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                          Command="{Binding Path=DataContext.DeleteDocumentCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                    <!--<MenuItem.Header>
                        <TextBlock Text="{Resx ResxName=Ecm.Audit.SearchView,Key=mnDeleteDocument.Text}" x:Name="mnDeleteDocument" />
                    </MenuItem.Header>-->
                    <MenuItem.Icon>
                        <Image Source="../Resources/Images/delete.png" Margin="2" Width="22" Height="22"/>
                    </MenuItem.Icon>
                </MenuItem>

                <!--<MenuItem Header="Open" 
                          Command="{Binding Path=DataContext.OpenDocumentCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"></MenuItem>
                <MenuItem Header="Print" Click="PrintClick"></MenuItem>
                <MenuItem Header="Delete" x:Name="mnDelete"
                          Visibility="{Binding Path=DataContext.EnableDelete, Converter={StaticResource VisibilityConverter}, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                          Command="{Binding Path=DataContext.DeleteDocumentCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"></MenuItem>-->
            </ContextMenu>
            <ContextMenu x:Key="ExcelMenu" Background="Gray" MinWidth="200" HasDropShadow="True">
                <MenuItem Header="{Resx ResxName=ExcelImport.SearchView,Key=mnOpen}" 
                          Command="{Binding Path=DataContext.OpenDocumentCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                    <MenuItem.Icon>
                        <Image Source="../Resources/Images/open.png" Margin="2" Width="22" Height="22"/>
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
                <Style x:Key="GlobalResultHeader" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{DynamicResource SearchResultHeaderBackground}" />
            <Setter Property="Height" Value="26" />
        </Style>
        <Style x:Key="ResultHeader" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{DynamicResource SearchResultHeaderBackground}" />
            <Setter Property="Height" Value="26" />
        </Style>
        <Style x:Key="ResultHeaderText" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="EmptyTextRow" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,2,0,2" />
        </Style>
        <Style x:Key="ResultHeaderButton" TargetType="{x:Type Button}" BasedOn="{StaticResource LinkButton}" >
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="20,0,5,0" />
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="ResultItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemStyle}">
            <Setter Property="IsSelected" Value="{Binding Path=Selected_4E19573E_D42E_4B74_BB81_E3EF56633947}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <EventSetter Event="PreviewMouseDown" Handler="ResultItemPreviewMouseDown" />
        </Style>
        <Style x:Key="ResultHeaderToogle" TargetType="{x:Type ToggleButton}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="Template" Value="{StaticResource CollapseExpand}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        </Style>

            <Style x:Key="ExcelItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemStyle}">
                <Setter Property="ContextMenu" Value="{StaticResource ExcelMenu}"/>
                <Setter Property="VerticalAlignment" Value="Center" />
                <EventSetter Event="MouseDoubleClick" Handler="ExcelItemMouseDoubleClick" />
            </Style>
        <DataTemplate x:Key="SearchMenuItemTemplate">
            <StackPanel Height="25" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center" Orientation="Horizontal">
                <Image Source="{Binding Path=Icon,Converter={StaticResource ImageSourceBinaryConverter}}" Margin="5,0,0,0" Width="20" Height="20"/>
                <TextBlock Margin="10,0,0,0" Text="{Binding Path=Name,Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </StackPanel>
        </DataTemplate>
        <ControlTemplate x:Key="EmptyTemplate">
            <TextBlock />
        </ControlTemplate>
        <ControlTemplate x:Key="SearchCoditionTemplate">
            <ComboBox ItemsSource="{Binding Path=SearchConditions}" 
                      SelectedValue="{Binding Path=SearchQueryExpression.Condition, Mode=Twoway}"
                      HorizontalAlignment="Stretch" 
                      DisplayMemberPath="Key" 
                      SelectedValuePath="Value" 
                      VerticalAlignment="Center"/>
        </ControlTemplate>
        <ControlTemplate x:Key="NormalFieldTemplate">
            <TextBlock Text="{Binding Path=SearchQueryExpression.Field.QueryDisplayName}" VerticalAlignment="Center" Width="Auto" TextWrapping="NoWrap" />
        </ControlTemplate>
        <ControlTemplate x:Key="AdditionalFieldTemplate">
            <ComboBox ItemsSource="{Binding Path=DataContext.AvailableFields, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                      SelectedItem="{Binding Path=SearchQueryExpression.Field, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                      DisplayMemberPath="QueryDisplayName" VerticalAlignment="Center"/>
        </ControlTemplate>
        <ControlTemplate x:Key="SingleDateTimeTemplate">
            <DatePicker Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        HorizontalAlignment="Left" VerticalAlignment="Center" Width="110"/>
        </ControlTemplate>
        <ControlTemplate x:Key="PairDateTimeTemplate">
            <Grid HorizontalAlignment="Left" Width="250">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <DatePicker Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="100" />
                <TextBlock Grid.Column="1" Text=" - " VerticalAlignment="Center" />
                <DatePicker Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="100"
                            Text="{Binding Path=SearchQueryExpression.Value2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SingleIntegerTemplate">
            <TextBox Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     CustomControl:NumericTextBoxBehavior.Mask="Integer" 
                     CustomControl:NumericTextBoxBehavior.MinimumValue="-2147483648"
                     CustomControl:NumericTextBoxBehavior.MaximumValue="2147483647"
                     VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
        </ControlTemplate>
        <ControlTemplate x:Key="PairIntegerTemplate">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         HorizontalAlignment="Stretch" MinWidth="60"
                         CustomControl:NumericTextBoxBehavior.Mask="Integer" 
                         CustomControl:NumericTextBoxBehavior.MinimumValue="-2147483648"
                         CustomControl:NumericTextBoxBehavior.MaximumValue="2147483647"/>
                <TextBlock Text=" - " Grid.Column="1" VerticalAlignment="Center" />
                <TextBox Text="{Binding Path=SearchQueryExpression.Value2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         Grid.Column="2" HorizontalAlignment="Stretch" MinWidth="60"
                         CustomControl:NumericTextBoxBehavior.Mask="Integer" 
                         CustomControl:NumericTextBoxBehavior.MinimumValue="-2147483648"
                         CustomControl:NumericTextBoxBehavior.MaximumValue="2147483647"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SingleDecimalTemplate">
            <TextBox Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     CustomControl:NumericTextBoxBehavior.Mask="Decimal" 
                     MaxLength="15" HorizontalAlignment="Stretch"/>
        </ControlTemplate>
        <ControlTemplate x:Key="PairDecimalTemplate">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         CustomControl:NumericTextBoxBehavior.Mask="Decimal" 
                         MinWidth="60" MaxLength="15" HorizontalAlignment="Stretch"/>
                <TextBlock Text=" - " Grid.Column="1" VerticalAlignment="Center" />
                <TextBox Text="{Binding Path=SearchQueryExpression.Value2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Column="2" MinWidth="60" MaxLength="15" HorizontalAlignment="Stretch"
                         CustomControl:NumericTextBoxBehavior.Mask="Decimal" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SingleStringTemplate">
            <TextBox Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
        </ControlTemplate>
        <ControlTemplate x:Key="PickListTemplate">
            <ComboBox IsTabStop="True" SelectedItem="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay}"
                      ItemsSource="{Binding Path=AvailableOperands}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Center">
            </ComboBox>
        </ControlTemplate>
        <ControlTemplate x:Key="BooleanTemplate">
            <ComboBox IsTabStop="True" SelectedItem="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, Converter={StaticResource YesNoConverter}}"
                      ItemsSource="{Binding Path=AvailableOperands}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Center" />
        </ControlTemplate>
        <ControlTemplate x:Key="RemoveAdditionalFieldTemplate">
            <Button x:Name="btnRemoveCondition" Click="btnRemoveCondition_Click" Width="Auto" Height="Auto">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Width="22" Height="22">
                            <Image Source="../Resources/Images/delete.png" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
        </ControlTemplate>
        <DataTemplate x:Key="SearchExpressionTemplate">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsSharedSizeScope="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="62"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="22"/>
                </Grid.ColumnDefinitions>
                <Control x:Name="conditionControl" Template="{StaticResource SearchCoditionTemplate}"/>
                <Control Grid.Column="1" x:Name="fieldControl" Template="{StaticResource NormalFieldTemplate}" Margin="10,0,0,0" />
                <ComboBox ItemsSource="{Binding Path=SearchOperators, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedValue="{Binding Path=SearchQueryExpression.Operator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValuePath="Key"
                          DisplayMemberPath="Value"
                          Grid.Column="2" Margin="10,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Control Grid.Column="3" x:Name="control" Template="{StaticResource EmptyTemplate}" 
                         Margin="10,0,5,0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                <Control Grid.Column="4" x:Name="removeControl" Template="{StaticResource EmptyTemplate}"/>
            </Grid>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Date"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource PairDateTimeTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Date"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource SingleDateTimeTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Integer"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource PairIntegerTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Integer"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource SingleIntegerTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Decimal"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource PairDecimalTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Decimal"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource SingleDecimalTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="String"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource SingleStringTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Picklist" />
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource EqualOperatorSelectedConverter}}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource PickListTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Picklist" />
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource NotEqualOperatorSelectedConverter}}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource PickListTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Picklist"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource EqualOperatorSelectedConverter}}" Value="false"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource NotEqualOperatorSelectedConverter}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource SingleStringTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Boolean" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource BooleanTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsAdditionCondition}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="fieldControl" Property="Template" Value="{StaticResource AdditionalFieldTemplate}"/>
                    <Setter TargetName="removeControl" Property="Template" Value="{StaticResource RemoveAdditionalFieldTemplate}" />
                </MultiDataTrigger>
                <!--<DataTrigger Binding="{Binding Path=SearchQueryExpression.Condition}" Value="None">
                    <Setter TargetName="conditionControl" Property="Template" Value="{StaticResource EmptyTemplate}" />
                </DataTrigger>-->
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="CheckBoxResultHeader">
            <StackPanel HorizontalAlignment="Stretch">
                <CheckBox IsChecked="{Binding Path=IsSelected}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4,0,4,0"></CheckBox>
            </StackPanel>
        </DataTemplate>
        <Style x:Key="GridViewHeaderCenterStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
            <Setter Property="Background" Value="#b9d3e3" />
        </Style>

        </ResourceDictionary>
    </Window.Resources>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <Grid x:Name="pnCenter" MinWidth="200" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Grid DockPanel.Dock="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="600"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Content Types" Margin="5"/>
                        <ComboBox ItemsSource="{Binding Path=DocumentTypes}"
                                  DisplayMemberPath="Name"
                                  SelectedItem="{Binding Path=SelectedDocumentType,Mode=TwoWay}" Grid.Row="1" Margin="5"/>
                        <Button Grid.Column="1" Margin="5,5,12,5" Grid.Row="1" 
                                        Command="{Binding Path=AdvanceSearchCommand}" IsDefault="True">
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <Grid Width="100" Height="25">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Image Source="../Resources/Images/search.png" Width="20" Height="20" Margin="5,0,0,0"/>
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Search" Width="Auto" Height="Auto" Grid.Column="1" Style="{StaticResource ButtonTextStyle}"/>
                                    </Grid>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>
                    </Grid>
                    <Grid x:Name="pnMainSearch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                            DockPanel.Dock="Top" Height="Auto" MinHeight="20" MaxHeight="300"
                            SizeChanged="PnlMainSearchSizeChanged">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid x:Name="SearchPanel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinHeight="20" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="1" Style="{StaticResource Separator}"/>
                            <Grid Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ListBox x:Name="lbxSearch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                            ItemsSource="{Binding Path=SearchQueryExpressions}"
                                            BorderThickness="0" Margin="5"
                                            ItemContainerStyle="{StaticResource SearchConditionStyle}"
                                            ItemTemplate="{StaticResource SearchExpressionTemplate}"/>
                            </Grid>
                        </Grid>
                        <Grid Grid.Row="1" Width="Auto" Height="Auto" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="22"/>
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="SearchButtonPanel" Visibility="Collapsed">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button Grid.Column="0"
                                        VerticalAlignment="Center" Margin="5" 
                                        Command="{Binding Path=AddSearchConditionCommand}">
                                    <Button.ContentTemplate>
                                        <DataTemplate>
                                            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="80" Height="25">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Image Source="../Resources/Images/add.png" Width="20" Height="20" Margin="5,0,0,0"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Add" Width="Auto" Height="Auto" Grid.Column="1" Style="{StaticResource ButtonTextStyle}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </Button.ContentTemplate>
                                </Button>
                                <Button Grid.Column="1"
                                        VerticalAlignment="Center" Margin="5"
                                        Command="{Binding Path=ResetSearchConditionCommand}">
                                    <Button.ContentTemplate>
                                        <DataTemplate>
                                            <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="80" Height="25">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Image Source="../Resources/Images/reset.png" Width="20" Height="20" Margin="5,0,0,0"/>
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Reset" Width="Auto" Height="Auto" Grid.Column="1" Style="{StaticResource ButtonTextStyle}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </Button.ContentTemplate>
                                </Button>
                            </Grid>
                            <ToggleButton Grid.Column="1" Focusable="False" IsTabStop="False" Height="20" Width="20"
                                            Template="{DynamicResource CollapseExpand}"
                                            VerticalAlignment="Center" HorizontalAlignment="Center"
                                            ClickMode="Release" x:Name="btnExpandSearch"
                                            Click="BtnExpandSearchClick">
                            </ToggleButton>
                        </Grid>
                    </Grid>
                    <CustomControl:Splitter Style="{StaticResource HorizontalSplitter}" HorizontalAlignment="Stretch" Height="Auto" DockPanel.Dock="Top"/>
                    <Grid DockPanel.Dock="Top" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
                            <StackPanel Name="pnResult">
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                    <CustomControl:Splitter Style="{StaticResource HorizontalSplitter}" HorizontalAlignment="Stretch" Height="Auto" DockPanel.Dock="Top"/>
                    <Grid DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                            Background="{StaticResource BackgroundBrush}" 
                            BorderThickness="1" Margin="0,0,0,10" Height="40"
                            BorderBrush="{StaticResource BorderBrush}">
                            <TextBlock Text="Searched files" Style="{StaticResource DisplayViewText}"/>
                        </Border>
                        <CustomControl:SortableListView ColumnHeaderSortedAscendingTemplate="GridHeaderTemplateArrowUp"
                                                        ColumnHeaderSortedDescendingTemplate="GridHeaderTemplateArrowDown"
                                                        ColumnHeaderNotSortedTemplate="GridHeaderTemplateTransparent"
                                                        ItemContainerStyle="{DynamicResource ExcelItemStyle}"
                                                        x:Name="lvExcelFile"
                                                        HorizontalAlignment="Stretch" 
                                                        VerticalAlignment="Stretch" 
                                                        MinHeight="200"
                                                        Grid.Row="1" 
                                                        CustomControl:ListViewLayoutManager.Enabled = "True"
                                                        EndSortingProcess="LvlFieldEndSortingProcess"
                                                        ItemsSource="{Binding Path=Files}"
                                                        SelectedItem="{Binding Path=SelectedPage,Mode=TwoWay}">
                            <CustomControl:SortableListView.View>
                                <GridView>
                                    <CustomControl:SortableGridViewColumn Header="" Width="50" CellTemplate="{StaticResource ThumbnailTemplate}" 
                                                                            CustomControl:RangeColumn.MinWidth="20" 
                                                                            CustomControl:RangeColumn.MaxWidth="50"/>
                                    <CustomControl:SortableGridViewColumn Header="File Name"
                                                                            Width="700" DisplayMemberBinding="{Binding Path=OriginalFileName}" 
                                                                            SortPropertyName="OriginalFileName"/>
                                    <CustomControl:SortableGridViewColumn Header="File Extension" 
                                                                            Width="Auto" DisplayMemberBinding="{Binding Path=FileExtension}" 
                                                                            SortPropertyName="FileExtension" 
                                                                            CustomControl:RangeColumn.IsFillColumn="True"
                                                                            CustomControl:RangeColumn.MaxWidth="100"/>
                                </GridView>
                            </CustomControl:SortableListView.View>
                        </CustomControl:SortableListView>
                    </Grid>
                    <CustomControl:Splitter Style="{StaticResource HorizontalSplitter}" HorizontalAlignment="Stretch" Height="Auto" DockPanel.Dock="Top"/>
                    <Grid DockPanel.Dock="Top" HorizontalAlignment="Stretch">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                            Background="{StaticResource BackgroundBrush}" 
                            BorderThickness="1" Margin="0,0,0,10" Height="40"
                            BorderBrush="{StaticResource BorderBrush}">
                            <TextBlock Text="More files" Style="{StaticResource DisplayViewText}"/>
                        </Border>
                        <CustomControl:SortableListView HorizontalAlignment="Stretch" 
                                                        x:Name="lvMoreFile"
                                                        VerticalAlignment="Stretch" 
                                                        MinHeight="200"
                                                        ItemsSource="{Binding Path=MoreFiles}"
                                                        ColumnHeaderSortedAscendingTemplate="GridHeaderTemplateArrowUp"
                                                        ColumnHeaderSortedDescendingTemplate="GridHeaderTemplateArrowDown"
                                                        ColumnHeaderNotSortedTemplate="GridHeaderTemplateTransparent"
                                                        CustomControl:ListViewLayoutManager.Enabled = "True"
                                                        EndSortingProcess="LvlFieldEndSortingProcess"
                                                        Grid.Row="1"
                                                        ItemContainerStyle="{DynamicResource ListViewItemStyle}">
                            <CustomControl:SortableListView.View>
                                <GridView>
                                    <CustomControl:SortableGridViewColumn Header="" Width="50" CellTemplate="{StaticResource ThumbnailTemplate}" 
                                                                            CustomControl:RangeColumn.MinWidth="20" 
                                                                            CustomControl:RangeColumn.MaxWidth="50"/>
                                    <CustomControl:SortableGridViewColumn Header="File Name" Width="700" DisplayMemberBinding="{Binding Path=OriginalFileName}"/>
                                    <CustomControl:SortableGridViewColumn Header="File Extension" 
                                                                          Width="Auto" 
                                                                          DisplayMemberBinding="{Binding Path=FileExtension}"
                                                                          CustomControl:RangeColumn.IsFillColumn="True" 
                                                                          CustomControl:RangeColumn.MinWidth="100"/>
                                </GridView>
                            </CustomControl:SortableListView.View>
                        </CustomControl:SortableListView>
                    </Grid>
                </DockPanel>
            </Grid>
        </ScrollViewer>
        <Border Style="{StaticResource Separator}" Grid.Row="1"/>
        <StackPanel Orientation="Horizontal" Grid.Row="2">
            <Button Grid.Column="1" Margin="5,5,12,5" Grid.Row="1" Command="{Binding Path=CloseCommand}" IsDefault="True">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Grid Width="100" Height="25">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Image Source="../Resources/Images/close.png" Width="20" Height="20" Margin="5,0,0,0"/>
                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="Close" Width="Auto" Height="Auto" Grid.Column="1" Style="{StaticResource ButtonTextStyle}"/>
                        </Grid>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
        </StackPanel>
        <CustomControl:LoadingAnimation x:Name="WaitningControl" Margin="0,250,0,0"  Visibility="{Binding Path=IsProcessing,Converter={StaticResource VisibilityConverter}}"/>
    </Grid>
</Window>
