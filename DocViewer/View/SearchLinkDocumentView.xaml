<UserControl x:Class="Ecm.DocViewer.SearchLinkDocumentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             Language="{UICulture}"
             xmlns:CustomControl="clr-namespace:Ecm.CustomControl;assembly=CustomControl"            
             xmlns:local="clr-namespace:Ecm.DocViewer"
             Name="me"
             mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="800" Padding="10">
    <UserControl.Resources>
        <DataTemplate x:Key="CheckBoxResultHeader">
            <StackPanel HorizontalAlignment="Stretch">
                <CheckBox IsChecked="{Binding Path=Checked_4E19573E_D42E_4B74_BB81_E3EF56633947}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4,0,4,0"></CheckBox>
            </StackPanel>
        </DataTemplate>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="SelectedOn">
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="0.55" />
                            </Storyboard>
                            <Storyboard x:Key="SelectedOff">
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="0" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid SnapsToDevicePixels="true">
                            <Rectangle x:Name="BackgroundGradientSelectedDisabled" RadiusX="1" RadiusY="1" Opacity="0" Fill="Transparent" Stroke="Transparent"/>
                            <Rectangle x:Name="BackgroundGradientSelected" Stroke="{DynamicResource SelectionColor}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Fill="{DynamicResource MouseOverBrush}">
                            </Rectangle>
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsSelected" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard" />
                                </Trigger.EnterActions>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}" x:Key="SearchListBoxItem">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="SelectedOn">
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.5" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="0.55" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsSelectedGlow" Storyboard.TargetProperty="Opacity" To="1" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                            <Storyboard x:Key="SelectedOff">
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsSelectedGlow" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="0" />
                            </Storyboard>
                            <Storyboard x:Key="hoverOn">
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientHover" Storyboard.TargetProperty="Opacity" To="0.84" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="1" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="MouseOverShine" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                            <Storyboard x:Key="hoverOff">
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientHover" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="MouseOverShine" Storyboard.TargetProperty="Opacity" To="0" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid SnapsToDevicePixels="true">
                            <Rectangle x:Name="BackgroundGradientSelectedDisabled" RadiusX="1" RadiusY="1" Opacity="0" Fill="Transparent" Stroke="Transparent"/>
                            <Rectangle x:Name="BackgroundGradientSelected" Stroke="#a3adb8" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Fill="#a3adb8"/>
                            <Border BorderBrush="#666666" x:Name="IsSelectedGlow" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="1" CornerRadius="2">
                                <Rectangle Margin="1">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush Center="0.5,0.9" GradientOrigin="0.5,0.9" RadiusY="0.5" RadiusX="0.5">
                                            <GradientStop Color="#9FFFFFFF" Offset="0"/>
                                            <GradientStop Offset="1"/>
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <Border BorderBrush="#666666" x:Name="Shine" BorderThickness="1" Opacity="0" CornerRadius="2">
                                <Rectangle Margin="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#53FFFFFF" Offset="0"/>
                                            <GradientStop Offset="0.2"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <Rectangle x:Name="BackgroundGradientHover" Stroke="#dee2e7" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Fill="#dee2e7"/>
                            <Border BorderBrush="#666666" x:Name="IsMouseOverGlow" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="1" CornerRadius="2">
                                <Rectangle Margin="1">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush Center="0.1,0.9" GradientOrigin="0.1,0.9" RadiusY="0.5" RadiusX="0.5">
                                            <GradientStop Color="#9FFFFFFF" Offset="0"/>
                                            <GradientStop Offset="1"/>
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <Border BorderBrush="#666666" x:Name="MouseOverShine" BorderThickness="1" Opacity="0" CornerRadius="2">
                                <Rectangle Margin="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#53FFFFFF" Offset="0"/>
                                            <GradientStop Offset="0.9"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource hoverOff}" x:Name="hoverOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource hoverOn}" x:Name="hoverOn_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}" x:Key="SearchConditionStyle">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin" Value="0,2,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid SnapsToDevicePixels="true" HorizontalAlignment="Stretch">
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Stretch" Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type CustomControl:SortableListView}">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Resources>
                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">20</sys:Double>
                <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">20</sys:Double>
                <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">20</sys:Double>
                <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">20</sys:Double>
            </Style.Resources>
        </Style>

        <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="IsTabStop" Value="False"></Setter>
            <Setter Property="Height" Value="26"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="SelectedOn">
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0.84" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="0.55" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsSelectedGlow" Storyboard.TargetProperty="Opacity" To="1" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="1" />
                            </Storyboard>
                            <Storyboard x:Key="SelectedOff">
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelected" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientSelectedDisabled" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsSelectedGlow" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="0" />
                            </Storyboard>
                            <Storyboard x:Key="hoverOn">
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientHover" Storyboard.TargetProperty="Opacity" To="0.6" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0.75" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="MouseOverShine" Storyboard.TargetProperty="Opacity" To="0.75" />
                            </Storyboard>
                            <Storyboard x:Key="hoverOff">
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundGradientHover" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0" />
                                <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="MouseOverShine" Storyboard.TargetProperty="Opacity" To="0" />
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Rectangle x:Name="BackgroundGradientSelectedDisabled" RadiusX="1" RadiusY="1" Opacity="0" Fill="Transparent" Stroke="Transparent"/>
                            <Rectangle x:Name="BackgroundGradientSelected" Stroke="{StaticResource PressedBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Fill="{StaticResource PressedBrush}"/>
                            <Border BorderBrush="{StaticResource PressedBorderBrush}" x:Name="IsSelectedGlow" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="1" CornerRadius="2">
                                <Rectangle Margin="1">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush Center="0.5,0.9" GradientOrigin="0.5,0.9" RadiusY="0.5" RadiusX="0.5">
                                            <GradientStop Color="#9FFFFFFF" Offset="0"/>
                                            <GradientStop Offset="1"/>
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <Border BorderBrush="{StaticResource PressedBorderBrush}" x:Name="Shine" BorderThickness="1" Opacity="0" CornerRadius="2">
                                <Rectangle Margin="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#53FFFFFF" Offset="0"/>
                                            <GradientStop Offset="0.2"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <Rectangle x:Name="BackgroundGradientHover" HorizontalAlignment="Stretch" Stroke="{StaticResource MouseOverBrush}" Grid.Column="0" Grid.ColumnSpan="4" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Fill="{StaticResource MouseOverBrush}"/>
                            <Border BorderBrush="{StaticResource MouseOverBorderBrush}" x:Name="IsMouseOverGlow" HorizontalAlignment="Stretch" Grid.Column="0" Grid.ColumnSpan="4" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="1" CornerRadius="2">
                                <Rectangle Margin="1">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush Center="0.1,0.9" GradientOrigin="0.1,0.9" RadiusY="0.5" RadiusX="0.5">
                                            <GradientStop Color="#53FFFFFF" Offset="0"/>
                                            <GradientStop Offset="1"/>
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <Border BorderBrush="{StaticResource PressedBorderBrush}" x:Name="MouseOverShine" HorizontalAlignment="Stretch" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="1" Opacity="0" CornerRadius="2">
                                <Rectangle Margin="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#53FFFFFF" Offset="0"/>
                                            <GradientStop Offset="0.9"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <Border Name="Border"
                                Padding="2"
                                SnapsToDevicePixels="true"
                                Background="Transparent">
                                <GridViewRowPresenter/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard" />
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource hoverOff}" x:Name="hoverOff_BeginStoryboard"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource hoverOn}" x:Name="hoverOn_BeginStoryboard"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false" />
                                    <Condition Property="IsMouseOver" Value="false" />
                                    <Condition Property="ItemsControl.AlternationIndex" Value="0" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="White"></Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false" />
                                    <Condition Property="IsMouseOver" Value="false" />
                                    <Condition Property="ItemsControl.AlternationIndex" Value="1" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Border" Property="Background" Value="WhiteSmoke"></Setter>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HorizontalSplitter" TargetType="{x:Type CustomControl:Splitter}">
            <Setter Property="Thickness" Value="3"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CustomControl:Splitter}">
                        <Grid ToolTip="Resize" SnapsToDevicePixels="True" Background="{StaticResource LineBrush}">
                            <!-- Grip -->
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Rectangle Width="2" Height="2" Fill="#5A000000"/>
                                <Rectangle Width="2" Height="2" Margin="2 0 2 0" Fill="#5A000000"/>
                                <Rectangle Width="2" Height="2" Fill="#5A000000"/>
                                <!-- (could also use an image or a drawing) -->
                            </StackPanel>
                            <!-- Bevels -->
                            <Border BorderBrush="#5AFFFFFF" BorderThickness="0,1,0,0"/>
                            <Border BorderBrush="#5A000000" BorderThickness="0,0,0,1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="VerticalSpitter" TargetType="{x:Type CustomControl:Splitter}">
            <Setter Property="Thickness" Value="3"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CustomControl:Splitter}">
                        <Grid ToolTip="Resize" SnapsToDevicePixels="True" Background="{StaticResource LineBrush}">
                            <!-- Grip -->
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                <Rectangle Width="2" Height="2" Fill="#5A000000"/>
                                <Rectangle Width="2" Height="2" Margin="0 2 0 2" Fill="#5A000000"/>
                                <Rectangle Width="2" Height="2" Fill="#5A000000"/>
                                <!-- (could also use an image or a drawing) -->
                            </StackPanel>
                            <!-- Bevels -->
                            <Border BorderBrush="#5AFFFFFF" BorderThickness="1,0,0,0"/>
                            <Border BorderBrush="#5A000000" BorderThickness="0,0,1,0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
            <Setter Property="Width" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Grid Height="26">
                            <Border x:Name="bd" 
                                BorderThickness="1,1,0,1"
                                BorderBrush="{StaticResource BorderBrush}"
                                Background="{StaticResource BackgroundBrush}"
                                VerticalAlignment="Stretch">
                                <ContentPresenter Width="Auto"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Center" Margin="5,0,5,0" />
                            </Border>
                            <Thumb x:Name="PART_HeaderGripper"
                               HorizontalAlignment="Right"
                               Margin="0,1,0,1"
                               Style="{StaticResource GridViewColumnHeaderGripper}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="bd" Value="{StaticResource MouseOverBrush}"/>
                                <Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource MouseOverBorderBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="GridHeaderTemplateArrowUp">
            <DockPanel>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding}"/>
                <Path x:Name="arrow" StrokeThickness="1" Fill="Gray" Data="M 5,10 L 15,10 L 10,5 L 5,10"/>
                <TextBlock Padding="5,0,0,0"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="GridHeaderTemplateArrowDown">
            <DockPanel>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding}"/>
                <Path x:Name="arrow" StrokeThickness="1" Fill="Gray" Data="M 5,5 L 10,10 L 15,5 L 5,5"/>
                <TextBlock Padding="5,0,0,0"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate x:Key="GridHeaderTemplateTransparent">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding}" Padding="0,0,5,0"/>
        </DataTemplate>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="2,2,0,0"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundGradientHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MouseOverShine" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BackgroundGradientHover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MouseOverShine" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Border Background="{StaticResource BackgroundBrush}" Height="22" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" x:Name="Background"/>
                            <Rectangle x:Name="BackgroundGradientHover" Grid.Column="1"  HorizontalAlignment="Stretch" Stroke="{StaticResource MouseOverBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1" Opacity="0" Fill="{StaticResource MouseOverBrush}"/>
                            <Border BorderBrush="{StaticResource MouseOverBorderBrush}" x:Name="IsMouseOverGlow" Grid.Column="1"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="1" CornerRadius="2">
                                <Rectangle Margin="1">
                                    <Rectangle.Fill>
                                        <RadialGradientBrush Center="0.1,0.9" GradientOrigin="0.1,0.9" RadiusY="0.5" RadiusX="0.5">
                                            <GradientStop Color="#53FFFFFF" Offset="0"/>
                                            <GradientStop Offset="1"/>
                                        </RadialGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <Border BorderBrush="{StaticResource MouseOverBorderBrush}" x:Name="MouseOverShine" HorizontalAlignment="Stretch" Grid.Column="1" BorderThickness="1" Opacity="0" CornerRadius="2">
                                <Rectangle Margin="1">
                                    <Rectangle.Fill>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#53FFFFFF" Offset="0"/>
                                            <GradientStop Offset="0.9"/>
                                        </LinearGradientBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Border>
                            <ContentPresenter HorizontalAlignment="Left" Margin="5,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />
                            <ToggleButton Style="{DynamicResource ComboBoxToggleButton}" IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide" Margin="0,1,0,0">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" Margin="0,-1,0,0" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1" CornerRadius="0,0,3,3" Background="#fefefe">
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">

                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />

                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid HorizontalAlignment="Stretch" Margin="2,2,2,2" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Background="Transparent" Text="" HorizontalAlignment="Stretch"/>
                            <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Grid.Column="1">
                                <Path x:Name="CheckedVisual" Width="8" Fill="Black" Stretch="Uniform" HorizontalAlignment="Stretch" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Height" Value="22" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="Border" HorizontalAlignment="Stretch"/>
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="2,0,0,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" TargetName="Border" Value="{StaticResource MouseOverBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="CollapseExpand" TargetType="{x:Type ToggleButton}">
            <Border x:Name="ExpanderButtonBorder">
                <Grid>
                    <Rectangle Fill="Transparent" Grid.ColumnSpan="2"/>
                    <Ellipse Name="Circle"
                         Stroke="DarkGray"
                         Width="20"
                         Height="20"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"/>
                    <!--Data="M 1,1.5 L 4.5,5 8,1.5" -->
                    <Path x:Name="Arrow"
                      Data="M 1,5 L 4.5,1 8,5"
                      Stroke="#FF666666"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5">
                        <Path.RenderTransform>
                            <RotateTransform Angle="0"/>
                        </Path.RenderTransform>
                    </Path>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="180" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="0" Duration="0:0:0.4"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Stroke" Value="#FF3C7FB1" TargetName="Circle"/>
                    <Setter Property="Stroke" Value="#222" TargetName="Arrow"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Stroke" Value="#FF526C7B" TargetName="Circle"/>
                    <Setter Property="StrokeThickness" Value="1.5" TargetName="Circle"/>
                    <Setter Property="Stroke" Value="#FF003366" TargetName="Arrow"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <DataTemplate x:Key="SearchMenuItemTemplate">
            <StackPanel Height="25" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Center" Orientation="Horizontal">
                <Image Source="{Binding Path=Icon,Converter={StaticResource ImageSourceBinaryConverter}}" Margin="5,0,0,0" Width="20" Height="20"/>
                <TextBlock Margin="10,0,0,0" Text="{Binding Path=Name,Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
            </StackPanel>
        </DataTemplate>
        <ControlTemplate x:Key="EmptyTemplate">
            <TextBlock />
        </ControlTemplate>
        <ControlTemplate x:Key="SearchCoditionTemplate">
            <ComboBox ItemsSource="{Binding Path=SearchConditions}" 
                      SelectedValue="{Binding Path=SearchQueryExpression.Condition, Mode=Twoway}"
                      HorizontalAlignment="Stretch" DisplayMemberPath="Key" SelectedValuePath="Value" VerticalAlignment="Center"/>
        </ControlTemplate>
        <ControlTemplate x:Key="NormalFieldTemplate">
            <TextBlock Text="{Binding Path=SearchQueryExpression.Field.QueryDisplayName}" VerticalAlignment="Center" Width="Auto" TextWrapping="NoWrap" />
        </ControlTemplate>
        <ControlTemplate x:Key="AdditionalFieldTemplate">
            <ComboBox ItemsSource="{Binding Path=DataContext.AvailableFields, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                      SelectedItem="{Binding Path=SearchQueryExpression.Field, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                      DisplayMemberPath="QueryDisplayName" VerticalAlignment="Center"/>
        </ControlTemplate>
        <ControlTemplate x:Key="SingleDateTimeTemplate">
            <DatePicker Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        HorizontalAlignment="Left" VerticalAlignment="Center" Width="110"/>
        </ControlTemplate>
        <ControlTemplate x:Key="PairDateTimeTemplate">
            <Grid HorizontalAlignment="Left" Width="250">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <DatePicker Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                            HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="100" />
                <TextBlock Grid.Column="1" Text=" - " VerticalAlignment="Center" />
                <DatePicker Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Center" Width="100"
                            Text="{Binding Path=SearchQueryExpression.Value2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SingleIntegerTemplate">
            <TextBox Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     CustomControl:NumericTextBoxBehavior.Mask="Integer" 
                     CustomControl:NumericTextBoxBehavior.MinimumValue="-2147483648"
                     CustomControl:NumericTextBoxBehavior.MaximumValue="2147483647"
                     VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
        </ControlTemplate>
        <ControlTemplate x:Key="PairIntegerTemplate">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         HorizontalAlignment="Stretch" MinWidth="60"
                         CustomControl:NumericTextBoxBehavior.Mask="Integer" 
                         CustomControl:NumericTextBoxBehavior.MinimumValue="-2147483648"
                         CustomControl:NumericTextBoxBehavior.MaximumValue="2147483647"/>
                <TextBlock Text=" - " Grid.Column="1" VerticalAlignment="Center" />
                <TextBox Text="{Binding Path=SearchQueryExpression.Value2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         Grid.Column="2" HorizontalAlignment="Stretch" MinWidth="60"
                         CustomControl:NumericTextBoxBehavior.Mask="Integer" 
                         CustomControl:NumericTextBoxBehavior.MinimumValue="-2147483648"
                         CustomControl:NumericTextBoxBehavior.MaximumValue="2147483647"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SingleDecimalTemplate">
            <TextBox Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     CustomControl:NumericTextBoxBehavior.Mask="Decimal" 
                     MaxLength="15" HorizontalAlignment="Stretch"/>
        </ControlTemplate>
        <ControlTemplate x:Key="PairDecimalTemplate">
            <Grid HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         CustomControl:NumericTextBoxBehavior.Mask="Decimal" 
                         MinWidth="60" MaxLength="15" HorizontalAlignment="Stretch"/>
                <TextBlock Text=" - " Grid.Column="1" VerticalAlignment="Center" />
                <TextBox Text="{Binding Path=SearchQueryExpression.Value2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Column="2" MinWidth="60" MaxLength="15" HorizontalAlignment="Stretch"
                         CustomControl:NumericTextBoxBehavior.Mask="Decimal" />
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="SingleStringTemplate">
            <TextBox Text="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
        </ControlTemplate>
        <ControlTemplate x:Key="PickListTemplate">
            <ComboBox IsTabStop="True" SelectedItem="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay}"
                      ItemsSource="{Binding Path=AvailableOperands}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Center">
            </ComboBox>
        </ControlTemplate>
        <ControlTemplate x:Key="BooleanTemplate">
            <ComboBox IsTabStop="True" SelectedItem="{Binding Path=SearchQueryExpression.Value1, Mode=TwoWay, Converter={StaticResource YesNoConverter}}"
                      ItemsSource="{Binding Path=AvailableOperands}"
                      HorizontalAlignment="Stretch" VerticalAlignment="Center" />
        </ControlTemplate>
        <ControlTemplate x:Key="RemoveAdditionalFieldTemplate">
            <Button x:Name="btnRemoveCondition" Width="Auto" Height="Auto">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Width="22" Height="22">
                            <Image Source="../Resources/delete.png" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
        </ControlTemplate>
        <DataTemplate x:Key="SearchExpressionTemplate">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsSharedSizeScope="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="62"/>
                    <ColumnDefinition Width="150"/>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="22"/>
                </Grid.ColumnDefinitions>
                <Control x:Name="conditionControl" Template="{StaticResource SearchCoditionTemplate}"/>
                <Control Grid.Column="1" x:Name="fieldControl" Template="{StaticResource NormalFieldTemplate}" Margin="10,0,0,0" />
                <ComboBox ItemsSource="{Binding Path=SearchOperators, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedValue="{Binding Path=SearchQueryExpression.Operator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValuePath="Key"
                          DisplayMemberPath="Value"
                          Grid.Column="2" Margin="10,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Control Grid.Column="3" x:Name="control" Template="{StaticResource EmptyTemplate}" 
                         Margin="10,0,5,0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" VerticalAlignment="Center"/>
                <Control Grid.Column="4" x:Name="removeControl" Template="{StaticResource EmptyTemplate}"/>
            </Grid>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Date"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource PairDateTimeTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Date"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource SingleDateTimeTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Integer"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource PairIntegerTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Integer"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource SingleIntegerTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Decimal"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource PairDecimalTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Decimal"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource SingleDecimalTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="String"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource BetweenOperatorSelectedConverter}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource SingleStringTemplate}"/>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Picklist" />
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource EqualOperatorSelectedConverter}}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource PickListTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Picklist" />
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource NotEqualOperatorSelectedConverter}}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource PickListTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Picklist"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource EqualOperatorSelectedConverter}}" Value="false"/>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Operator, Converter={StaticResource NotEqualOperatorSelectedConverter}}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource SingleStringTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=SearchQueryExpression.Field.DataType}" Value="Boolean" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource BooleanTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=IsAdditionCondition}" Value="true"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="fieldControl" Property="Template" Value="{StaticResource AdditionalFieldTemplate}"/>
                    <Setter TargetName="removeControl" Property="Template" Value="{StaticResource RemoveAdditionalFieldTemplate}" />
                </MultiDataTrigger>
                <!--<DataTrigger Binding="{Binding Path=SearchQueryExpression.Condition}" Value="None">
                    <Setter TargetName="conditionControl" Property="Template" Value="{StaticResource EmptyTemplate}" />
                </DataTrigger>-->
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style x:Key="GlobalResultHeader" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{StaticResource SearchResultHeaderBackground}" />
            <Setter Property="Height" Value="26" />
        </Style>
        <Style x:Key="ResultHeader" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="{StaticResource SearchResultHeaderBackground}" />
            <Setter Property="Height" Value="26" />
        </Style>
        <Style x:Key="ResultHeaderText" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="EmptyTextRow" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,2,0,2" />
        </Style>
        <Style x:Key="ResultHeaderButton" TargetType="{x:Type Button}" BasedOn="{StaticResource LinkButton}" >
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="20,0,5,0" />
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style x:Key="ResultItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ListViewItemStyle}">
            <Setter Property="IsSelected" Value="{Binding Path=Selected_4E19573E_D42E_4B74_BB81_E3EF56633947}" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <EventSetter Event="MouseDoubleClick" Handler="ResultItemMouseDoubleClick" />
            <EventSetter Event="PreviewMouseDown" Handler="ResultItemPreviewMouseDown" />
        </Style>
        <Style x:Key="ResultHeaderToogle" TargetType="{x:Type ToggleButton}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="Template" Value="{StaticResource CollapseExpand}" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        </Style>

    </UserControl.Resources>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" DockPanel.Dock="Top">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid HorizontalAlignment="Stretch" Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width=".3*"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Resx ResxName=Ecm.DocViewer.ViewerContainer,Key=tbContentType}"></TextBlock>
                    <ComboBox Grid.Row="1" Grid.Column="1" 
                              ItemsSource="{Binding Path=DocTypes,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                              DisplayMemberPath="Name"
                              HorizontalAlignment="Stretch" IsSynchronizedWithCurrentItem="True"
                              SelectedItem="{Binding ElementName=DetailControl, Path=DocumentType,Mode=TwoWay}"></ComboBox>
                </Grid>
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Name="SearchPanel" Grid.Row="1">
                    <ListBox x:Name="lbxSearch" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                             ItemsSource="{Binding Path=SearchQueryExpressions,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                             BorderThickness="0" Margin="5"
                             ItemContainerStyle="{StaticResource SearchConditionStyle}"
                             ItemTemplate="{StaticResource SearchExpressionTemplate}" Grid.ColumnSpan="3"/>
                </Grid>
                <Grid Grid.Row="2" Width="Auto" Height="Auto" Margin="5" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="22"/>
                    </Grid.ColumnDefinitions>
                    <Grid x:Name="SearchButtonPanel" Visibility="Collapsed">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0"
                                VerticalAlignment="Center" Margin="5" 
                                Command="{Binding Path=AddSearchConditionCommand}">
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="150" Height="25">
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Resx ResxName=Ecm.DocViewer.ViewerContainer,Key=btnAddCondition.Text}" Width="Auto" Height="Auto" Style="{StaticResource ButtonTextStyle}"/>
                                    </Grid>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>
                        <Button Grid.Column="1"
                                VerticalAlignment="Center" Margin="5"
                                Command="{Binding Path=ResetSearchConditionCommand}">
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="150" Height="25">
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Resx ResxName=Ecm.DocViewer.ViewerContainer,Key=btnResetCondition.Text}" Width="Auto" Height="Auto" Style="{StaticResource ButtonTextStyle}"/>
                                    </Grid>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>
                        <Button Grid.Column="3" Margin="5,5,12,5"
                                Command="{Binding Path=AdvanceSearchCommand}" IsDefault="True">
                            <Button.ContentTemplate>
                                <DataTemplate>
                                    <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="120" Height="25">
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Resx ResxName=Ecm.DocViewer.ViewerContainer,Key=btnSearch.Text}" Width="Auto" Height="Auto" Style="{StaticResource ButtonTextStyle}"/>
                                    </Grid>
                                </DataTemplate>
                            </Button.ContentTemplate>
                        </Button>
                    </Grid>
                    <TextBlock Text="{Resx ResxName=Ecm.DocViewer.ViewerContainer,Key=tbAdvanceSearchTitle.Text}" x:Name="AdvanceSearchTitle" HorizontalAlignment="Right" Margin="5,0,5,0"/>
                    <ToggleButton Grid.Column="1" Focusable="False" IsTabStop="False" Height="20" Width="20"
                                          Template="{StaticResource CollapseExpand}"
                                          VerticalAlignment="Center" HorizontalAlignment="Center"
                                          ClickMode="Release" x:Name="btnExpandSearch"
                                          Click="BtnExpandSearchClick">
                    </ToggleButton>
                </Grid>
            </Grid>
            <CustomControl:Splitter Style="{StaticResource HorizontalSplitter}" HorizontalAlignment="Stretch" Height="Auto" DockPanel.Dock="Top"/>
            <Grid DockPanel.Dock="Top" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                    <StackPanel Name="pnResult">
                    </StackPanel>
                </ScrollViewer>
                <Border Grid.Row="1" Style="{StaticResource Separator}"/>
                <StackPanel Orientation="Horizontal" Height="Auto" Margin="5" Grid.Row="2">
                    <Button VerticalAlignment="Center" Margin="5" Name="btnAddLink"
                            Command="{Binding Path=AddLinkCommand, ElementName=me}">
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="100" Height="25">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Resx ResxName=Ecm.DocViewer.ViewerContainer,Key=btnAddLinkDoc}" Width="Auto" Height="Auto" Style="{StaticResource ButtonTextStyle}"/>
                                </Grid>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>

                    <Button Command="{Binding Path=CancelLinkCommand,ElementName=me}"
                            VerticalAlignment="Center" Margin="5">
                        <Button.ContentTemplate>
                            <DataTemplate>
                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="100" Height="25">
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Resx ResxName=Ecm.DocViewer.ViewerContainer,Key=btnCancel}" Width="Auto" Height="Auto" Style="{StaticResource ButtonTextStyle}"/>
                                </Grid>
                            </DataTemplate>
                        </Button.ContentTemplate>
                    </Button>
                </StackPanel>
            </Grid>
        </DockPanel>
        <CustomControl:LoadingAnimation x:Name="WaitningControl" Margin="0,250,0,0"  Visibility="{Binding Path=ViewerContainer.IsProcessing,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}},Converter={StaticResource VisibilityConverter}}"/>
    </Grid>
</UserControl>
