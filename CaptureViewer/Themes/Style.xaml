<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cv="clr-namespace:Ecm.CaptureViewer.Converter"
                    xmlns:local="clr-namespace:Ecm.CustomControl;assembly=CustomControl"
                    xmlns:classic="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:atcp="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
                    xmlns:cc="clr-namespace:Ecm.CaptureViewer.Controls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/CaptureViewer;component/Themes/Brushes.xaml"></ResourceDictionary>
        <ResourceDictionary Source="/CaptureViewer;component/Themes/DatePicker.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <cv:BoolVisibilityConverter x:Key="BoolVisibilityConverter" />
    <cv:MultiBoolVisibilityConverter x:Key="MultiBoolVisibilityConverter" />
    <cv:NegativeBoolVisibilityConverter x:Key="NegativeBoolVisibilityConverter" />
    <cv:StringBoolVisibilityConverter x:Key="StringBoolVisibilityConverter" />
    <cv:ThumbnailMarginMultiplierConverter x:Key="ThumbnailMarginMultiplierConverter" Length="20" />
    <cv:NegativeBoolConverter x:Key="NegativeBoolConverter" />
    <cv:FileTypeConverter x:Key="FileTypeConverter" />
    <cv:FileFormatConverter x:Key="FileFormatConverter" />
    <cv:NegativeVisibilityConverter x:Key="NegativeVisibilityConverter" />
    <cv:ShortDateTimeConverter x:Key="ShortDateTimeConverter" />
    <cv:LongDateTimeConverter x:Key="LongDateTimeConverter" />
    <cv:YesNoConverter x:Key="YesNoConverter" />
    <cv:NullPathConverter x:Key="NullPathConverter" />
    <cv:IndexFieldDateTimeConverter x:Key="IndexFieldDateTimeConverter" />
    <cv:IndexFieldDecimalConverter x:Key="IndexFieldDecimalConverter" />
    <cv:OCRVisibilityConverter x:Key="OCRVisibilityConverter" />
    <cv:VisibilityConverter x:Key="VisibilityConverter"/>
    
    <Style TargetType="{x:Type local:SplitButton}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SplitButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="DisabledOn">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid">
                        <Border x:Name="BackgroundNorm" BorderThickness="1" CornerRadius="2" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}"/>
                        <Border x:Name="BackgroundNorm_highlight" BorderBrush="{DynamicResource NormalHighlightBrush}" BorderThickness="1" CornerRadius="2" Opacity="1" />
                        <Border x:Name="BackgroundOver" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource MouseOverBorderBrush}" Background="White">
                            <Rectangle Margin="1" Fill="{StaticResource MouseOverBrush}"/>
                        </Border>
                        <Border x:Name="BackgroundOver_Highlight" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>
                        <Border x:Name="BackgroundPressed" Background="{StaticResource PressedBrush}" Opacity="0" BorderThickness="1" BorderBrush="{StaticResource PressedBorderBrush}" CornerRadius="2"/>
                        <Border BorderBrush="{StaticResource MouseOverBorderBrush}" x:Name="IsMouseOverGlow" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="1" CornerRadius="2">
                            <Rectangle Margin="1">
                                <Rectangle.Fill>
                                    <RadialGradientBrush Center="0.5,0.9" GradientOrigin="0.5,0.9" RadiusY="0.5" RadiusX="0.5">
                                        <GradientStop Color="#9FFFFFFF" Offset="0"/>
                                        <GradientStop Offset="1"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border BorderBrush="{StaticResource MouseOverBorderBrush}" x:Name="Shine" BorderThickness="1" Opacity="0" CornerRadius="2">
                            <Rectangle Margin="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#53FFFFFF" Offset="0"/>
                                        <GradientStop Offset="0.2"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="BackgoundPressed_Highlight" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource PressedHighlightBrush}"/>
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Background="{DynamicResource DisabledBackgroundBrush}" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1" Opacity="0" CornerRadius="2"/>
                        <Grid Background="Transparent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="{TemplateBinding ContentTemplate}">
                            <Grid.ColumnDefinitions >
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="20"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                            <Rectangle x:Name="rect" Grid.Column="2" Width="1" Margin="0,-2,0,-2" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                            <Button x:Name="PART_DropDown"
									VerticalAlignment="Stretch"
                                    HorizontalAlignment="Stretch"
									Grid.Column="1"
                                    Background="Transparent" Width="Auto" Height="Auto">
                                <Path Data="M0,0L3,3 6,0z" Margin="0,1,0,0" Grid.Column="1" Stroke="{TemplateBinding Foreground}" Fill="{TemplateBinding Foreground}"/>
                            </Button>
                        </Grid>
                        <Border x:Name="FocusVisualElement" Margin="-1" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2" IsHitTestVisible="false" Opacity="0" />
                        <Border x:Name="DefaultBorder" Margin="-1" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" CornerRadius="2" IsHitTestVisible="false" Opacity="0" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Opacity" TargetName="DefaultBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard1" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard1" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DisabledOn}" />
                            </Trigger.EnterActions>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SplitButton}" x:Key="SplitButtonWithoutDropDown">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SplitButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="DisabledOn">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid">
                        <Border x:Name="BackgroundNorm" BorderThickness="1" CornerRadius="2" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}"/>
                        <Border x:Name="BackgroundNorm_highlight" BorderBrush="{DynamicResource NormalHighlightBrush}" BorderThickness="1" CornerRadius="2" Opacity="1" />
                        <Border x:Name="BackgroundOver" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource MouseOverBorderBrush}" Background="White">
                            <Rectangle Margin="1" Fill="{StaticResource MouseOverBrush}"/>
                        </Border>
                        <Border x:Name="BackgroundOver_Highlight" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>
                        <Border x:Name="BackgroundPressed" Background="{StaticResource PressedBrush}" Opacity="0" BorderThickness="1" BorderBrush="{StaticResource PressedBorderBrush}" CornerRadius="2"/>
                        <Border BorderBrush="{StaticResource MouseOverBorderBrush}" x:Name="IsMouseOverGlow" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="1" CornerRadius="2">
                            <Rectangle Margin="1">
                                <Rectangle.Fill>
                                    <RadialGradientBrush Center="0.5,0.9" GradientOrigin="0.5,0.9" RadiusY="0.5" RadiusX="0.5">
                                        <GradientStop Color="#9FFFFFFF" Offset="0"/>
                                        <GradientStop Offset="1"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border BorderBrush="{StaticResource MouseOverBorderBrush}" x:Name="Shine" BorderThickness="1" Opacity="0" CornerRadius="2">
                            <Rectangle Margin="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#53FFFFFF" Offset="0"/>
                                        <GradientStop Offset="0.2"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="BackgoundPressed_Highlight" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource PressedHighlightBrush}"/>
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Background="{DynamicResource DisabledBackgroundBrush}" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1" Opacity="0" CornerRadius="2"/>
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                        <Border x:Name="FocusVisualElement" Margin="-1" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2" IsHitTestVisible="false" Opacity="0" />
                        <Border x:Name="DefaultBorder" Margin="-1" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" CornerRadius="2" IsHitTestVisible="false" Opacity="0" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Opacity" TargetName="DefaultBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard1" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard1" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DisabledOn}" />
                            </Trigger.EnterActions>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock TextDecorations="None">
                    <ContentPresenter />
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#ccc" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="#666" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LinkButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock x:Name="linkButton" TextDecorations="None" FontWeight="Bold" FontFamily="Segoe UI" FontSize="12">
                        <ContentPresenter />
                    </TextBlock>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" TargetName="linkButton" Value="#c29e47" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Blue" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
    </Style>

    <ControlTemplate x:Key="CollapseExpand" TargetType="{x:Type ToggleButton}">
        <Border x:Name="ExpanderButtonBorder">
            <Grid>
                <Rectangle Fill="Transparent" Grid.ColumnSpan="2"/>
                <Ellipse Name="Circle"
                         Stroke="DarkGray"
                         Width="20"
                         Height="20"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"/>
                <!--Data="M 1,1.5 L 4.5,5 8,1.5" -->
                <Path x:Name="Arrow"
                      Data="M 1,5 L 4.5,1 8,5"
                      Stroke="#FF666666"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5">
                    <Path.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Path.RenderTransform>
                </Path>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="180" Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Arrow"
                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
                                             To="0" Duration="0:0:0.4"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Stroke" Value="#FF3C7FB1" TargetName="Circle"/>
                <Setter Property="Stroke" Value="#222" TargetName="Arrow"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Stroke" Value="#FF526C7B" TargetName="Circle"/>
                <Setter Property="StrokeThickness" Value="1.5" TargetName="Circle"/>
                <Setter Property="Stroke" Value="#FF003366" TargetName="Arrow"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="CollapseExpandButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent">
                        <Path Fill="{DynamicResource ThumbnailButtonFill}" Stroke="{DynamicResource ThumbnailButtonStroke}" Name="ExpandPath" VerticalAlignment="Center">
                            <Path.Data>
                                <PathGeometry Figures="M0,0L0,20L10,10z" />
                            </Path.Data>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="45" CenterX="0" CenterY="10" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="{DynamicResource ThumbnailButtonCheckedFill}" />
                            <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="{DynamicResource ThumbnailButtonCheckedStroke}" />
                        </Trigger>
                        <Trigger Property="Grid.IsMouseOver" Value="True">
                            <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="{DynamicResource ThumbnailButtonHoverStroke}" />
                            <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="{DynamicResource ThumbnailButtonHoverFill}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="VerticalSpitter" TargetType="{x:Type local:Splitter}">
        <Setter Property="Thickness" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Splitter}">
                    <Grid ToolTip="Resize" SnapsToDevicePixels="True" Background="Transparent">
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="HorizontalSplitter" TargetType="{x:Type local:Splitter}">
        <Setter Property="Thickness" Value="3"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Splitter}">
                    <Grid ToolTip="Resize" SnapsToDevicePixels="True" Background="{StaticResource LineBrush}">
                        <!-- Grip -->
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <Rectangle Width="2" Height="2" Fill="#5A000000"/>
                            <Rectangle Width="2" Height="2" Margin="2 0 2 0" Fill="#5A000000"/>
                            <Rectangle Width="2" Height="2" Fill="#5A000000"/>
                            <!-- (could also use an image or a drawing) -->
                        </StackPanel>
                        <!-- Bevels -->
                        <Border BorderBrush="#5AFFFFFF" BorderThickness="0,1,0,0"/>
                        <Border BorderBrush="#5A000000" BorderThickness="0,0,0,1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type TextBox}" x:Key="TextboxFocusIndexField">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="Gray"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="ComboboxFocusIndexField">
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="Gray"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>    
    </Style>
           
    <Style x:Key="QuickAccessButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="Grid">
                        <Border x:Name="Backgound" Background="{DynamicResource QuickAccessBackground}"></Border>
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Backgound" Property="Background" Value="{DynamicResource QuickAccessBackgroundHover}"></Setter>
                            <Setter TargetName="Backgound" Property="Opacity" Value="0.7"></Setter>
                            <Setter TargetName="Backgound" Property="OpacityMask" Value="#FFFFFF"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Backgound" Property="Background" Value="{DynamicResource QuickAccessBackgroundDisable}"/>
                            <Setter TargetName="Backgound" Property="Opacity" Value="0.7"></Setter>
                            <Setter TargetName="Backgound" Property="OpacityMask" Value="#FFFFFF"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Margin="4" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="classicDropDownStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <classic:ClassicBorderDecorator x:Name="chrome" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
							SnapsToDevicePixels="True"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">

                            <ContentPresenter x:Name="Cp" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </classic:ClassicBorderDecorator>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderStyle" TargetName="chrome" Value="RaisedPressed"/>
                            <Setter Property="Visibility" TargetName="chrome" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter Property="BorderStyle" TargetName="chrome" Value="RaisedPressed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Path.Stroke" TargetName="Cp" Value="#ADADAD"/>
                            <Setter Property="Path.Fill" TargetName="Cp" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FlatCheckBox" TargetType="CheckBox">
        <Setter Property="Foreground" Value="#ccc" />
        <Setter Property="BorderBrush" Value="#ccc" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ToolTip" Value="Save entered value for next doc"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Foreground" Value="#666" />
                <Setter Property="BorderBrush" Value="#666" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Red" BorderThickness="2">
                        <AdornedElementPlaceholder Name="MyAdorner" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="DarkCyan"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type DatePicker}" BasedOn="{StaticResource {x:Type DatePicker}}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Red" BorderThickness="2">
                        <AdornedElementPlaceholder Name="MyAdorner" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="DarkCyan"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type atcp:AutoCompleteBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Red" BorderThickness="2">
                        <AdornedElementPlaceholder Name="MyAdorner" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="DarkCyan"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Red" BorderThickness="2">
                        <AdornedElementPlaceholder Name="MyAdorner" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="Gray"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type local:BrowseFolderControl}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="Red" BorderThickness="2">
                        <AdornedElementPlaceholder Name="MyAdorner" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type Ellipse}" x:Key="ThumbCorner">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Stroke" Value="#FFC8C8C8" />
        <Setter Property="StrokeThickness" Value=".5" />
        <Setter Property="Width" Value="8" />
        <Setter Property="Height" Value="8" />
        <Setter Property="Margin" Value="-2" />
        <Setter Property="Fill">
            <Setter.Value>
                <RadialGradientBrush Center="0.2, 0.2" GradientOrigin="0.2, 0.2" RadiusX="0.8" RadiusY="0.8">
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="Gray" Offset="0.8" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type cc:ResizeAndMoveChrome}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:ResizeAndMoveChrome}">
                    <Grid>
                        <Grid Opacity="0" Margin="-3">
                            <cc:ResizeThumb Height="3"
                                               Cursor="SizeNS"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Stretch"/>
                            <cc:ResizeThumb Width="3"
                                               Cursor="SizeWE"
                                               VerticalAlignment="Stretch"
                                               HorizontalAlignment="Left"/>
                            <cc:ResizeThumb Width="3"
                                               Cursor="SizeWE"
                                               VerticalAlignment="Stretch"
                                               HorizontalAlignment="Right"/>
                            <cc:ResizeThumb Height="3"
                                               Cursor="SizeNS"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Stretch"/>
                            <cc:ResizeThumb Width="7"
                                               Height="7"
                                               Margin="-2"
                                               Cursor="SizeNWSE"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Left"/>
                            <cc:ResizeThumb Width="7"
                                               Height="7"
                                               Margin="-2"
                                               Cursor="SizeNESW"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Right"/>
                            <cc:ResizeThumb Width="7"
                                               Height="7"
                                               Margin="-2"
                                               Cursor="SizeNESW"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Left"/>
                            <cc:ResizeThumb Width="7"
                                               Height="7"
                                               Margin="-2"
                                               Cursor="SizeNWSE"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Right"/>
                        </Grid>
                        <Grid IsHitTestVisible="False" Opacity="1" Margin="-3">
                            <Rectangle SnapsToDevicePixels="True"
                                       StrokeThickness="5"
                                       Margin="1"
                                       Stroke="Gray"/>
                            <Ellipse Style="{StaticResource ThumbCorner}" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                            <Ellipse Style="{StaticResource ThumbCorner}" HorizontalAlignment="Right" VerticalAlignment="Top"/>
                            <Ellipse Style="{StaticResource ThumbCorner}" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                            <Ellipse Style="{StaticResource ThumbCorner}" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <LinearGradientBrush x:Key="ButtonNormalBackgroundFill" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0"/>
        <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
    </LinearGradientBrush>
    
    <Style x:Key="ToolbarButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="buttonBorder" Height="Auto" Width="Auto" BorderBrush="Transparent" BorderThickness="1">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="{TemplateBinding Padding}" VerticalAlignment="Center" RecognizesAccessKey="True" Width="Auto"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderThickness" Value="1" TargetName="buttonBorder" />
                            <Setter Property="BorderBrush" Value="#ffab3f" TargetName="buttonBorder" />
                            <Setter Property="Background" Value="#ffcb89" TargetName="buttonBorder" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="1" TargetName="buttonBorder" />
                            <Setter Property="BorderBrush" Value="#ffbd69" TargetName="buttonBorder" />
                            <Setter Property="Background" Value="#ffebb0" TargetName="buttonBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="PopupItemButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="buttonBorder" BorderThickness="1" Margin="0" BorderBrush="Transparent" Background="{TemplateBinding Background}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" Width="Auto"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="#ffab3f" TargetName="buttonBorder" />
                            <Setter Property="Background" Value="#ffbd69" TargetName="buttonBorder" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="BorderBrush" Value="#ffab3f" TargetName="buttonBorder" />
                            <Setter Property="Background" Value="#ffbd69" TargetName="buttonBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="ToolTipText">
        <Setter Property="FontSize" Value="10"></Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="DisabledOn">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid">
                        <Border x:Name="BackgroundNorm" BorderThickness="1" CornerRadius="2" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}"/>
                        <Border x:Name="BackgroundNorm_highlight" BorderBrush="{DynamicResource NormalHighlightBrush}" BorderThickness="1" CornerRadius="2" Opacity="1" />
                        <Border x:Name="BackgroundOver" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource MouseOverBorderBrush}" Background="White">
                            <Rectangle Margin="1" Fill="{StaticResource MouseOverBrush}"/>
                        </Border>
                        <Border x:Name="BackgroundOver_Highlight" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>
                        <Border x:Name="BackgroundPressed" Background="{StaticResource PressedBrush}" Opacity="0" BorderThickness="1" BorderBrush="{StaticResource PressedBorderBrush}" CornerRadius="2"/>
                        <Border BorderBrush="{StaticResource MouseOverBorderBrush}" x:Name="IsMouseOverGlow" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="1" CornerRadius="2">
                            <Rectangle Margin="1">
                                <Rectangle.Fill>
                                    <RadialGradientBrush Center="0.5,0.9" GradientOrigin="0.5,0.9" RadiusY="0.5" RadiusX="0.5">
                                        <GradientStop Color="#9FFFFFFF" Offset="0"/>
                                        <GradientStop Offset="1"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border BorderBrush="{StaticResource MouseOverBorderBrush}" x:Name="Shine" BorderThickness="1" Opacity="0" CornerRadius="2">
                            <Rectangle Margin="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#53FFFFFF" Offset="0"/>
                                        <GradientStop Offset="0.2"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="BackgoundPressed_Highlight" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource PressedHighlightBrush}"/>
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Background="{DynamicResource DisabledBackgroundBrush}" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1" Opacity="0" CornerRadius="2"/>
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                        <Border x:Name="FocusVisualElement" Margin="-1" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2" IsHitTestVisible="false" Opacity="0" />
                        <Border x:Name="DefaultBorder" Margin="-1" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" CornerRadius="2" IsHitTestVisible="false" Opacity="0" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Opacity" TargetName="DefaultBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard1" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard1" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DisabledOn}" />
                            </Trigger.EnterActions>
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type cc:AnnotationControl}"
           x:Key="{ComponentResourceKey {x:Type cc:CanvasElement}, AnnotationStyle}">
        <Setter Property="MinHeight" Value="1"/>
        <Setter Property="MinWidth" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cc:AnnotationControl}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=.}" Name="ShapeContainer" 
                          ToolTipService.HasDropShadow="True"
                          ToolTipService.ShowDuration="20000"
                          ToolTipService.Placement="Right">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" Margin="0"/>
                        <cc:MoveThumb Cursor="SizeAll" 
                                      Visibility="{Binding Path=ReadOnlyMode, Converter={StaticResource BoolVisibilityConverter}, Mode=TwoWay}">
                            <cc:MoveThumb.Style>
                                <Style TargetType="{x:Type cc:MoveThumb}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Rectangle Fill="Transparent"/>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </cc:MoveThumb.Style>
                        </cc:MoveThumb>
                        <cc:AnnotationDesigner x:Name="AnnotationItemDecorator"/>
                        <cc:SeparateBorder Background="#e3efff" BorderBrush="#6f9dd9" 
                                         BorderThickness="1" CornerRadius="2" 
                                         Height="30" VerticalAlignment="Top" Margin="0,-32,0,0" Width="107" HorizontalAlignment="Left"
                                         Cursor="Arrow" Visibility="{Binding Path=ShowToolbar, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolVisibilityConverter}}">
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton Style="{StaticResource ToolbarButtonStyle}" VerticalAlignment="Stretch" Margin="2" ToolTip="Line weight" Name="btnLineWeight">
                                    <Rectangle Width="27" Height="16">
                                        <Rectangle.Fill>
                                            <ImageBrush ImageSource="/CaptureViewer;component/Resources/line-weight.png"></ImageBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </ToggleButton>
                                <Popup StaysOpen="False" Placement="Bottom" AllowsTransparency="True" Focusable="True" PopupAnimation="Fade" 
                                       SnapsToDevicePixels="True"  PlacementTarget="{Binding ElementName=btnLineWeight}"  
                                       IsOpen="{Binding Path=IsChecked, ElementName=btnLineWeight}"  HorizontalOffset="-4" Name="PopupLineWeight">
                                    <Grid Background="White">
                                        <Border Background="#f6f6f6" BorderThickness="1" Margin="4" BorderBrush="#6593cf" CornerRadius="2">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Gray" ShadowDepth="0" BlurRadius="10"  />
                                            </Border.Effect>
                                            <Grid>
                                                <Border BorderThickness="0">
                                                    <StackPanel Orientation="Vertical">
                                                        <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2,4,2,0" ToolTip="Line weight 1" Height="20" 
                                                                      Command="{x:Static cc:AnnotationControl.SelectLineWeightCommand}" CommandParameter="1" Tag="1">
                                                            <Rectangle Fill="Black" Height="1" Width="80"></Rectangle>
                                                        </ToggleButton>
                                                        <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2,0,2,0" ToolTip="Line weight 3" Height="20"
                                                                      Command="{x:Static cc:AnnotationControl.SelectLineWeightCommand}" CommandParameter="3" Tag="3">
                                                            <Rectangle Fill="Black" Height="3" Width="80"></Rectangle>
                                                        </ToggleButton>
                                                        <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2,0,2,0" ToolTip="Line weight 5" Height="20"
                                                                      Command="{x:Static cc:AnnotationControl.SelectLineWeightCommand}" CommandParameter="5" Tag="5">
                                                            <Rectangle Fill="Black" Height="5" Width="80"></Rectangle>
                                                        </ToggleButton>
                                                        <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2,0,2,0" ToolTip="Line weight 7" Height="20"
                                                                      Command="{x:Static cc:AnnotationControl.SelectLineWeightCommand}" CommandParameter="7" Tag="7">
                                                            <Rectangle Fill="Black" Height="7" Width="80"></Rectangle>
                                                        </ToggleButton>
                                                        <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2,0,2,0" ToolTip="Line Weight 9" Height="20"
                                                                      Command="{x:Static cc:AnnotationControl.SelectLineWeightCommand}" CommandParameter="9" Tag="9">
                                                            <Rectangle Fill="Black" Height="9" Width="80"></Rectangle>
                                                        </ToggleButton>
                                                        <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2,0,2,4" ToolTip="Line weight 11" Height="20"
                                                                      Command="{x:Static cc:AnnotationControl.SelectLineWeightCommand}" CommandParameter="11" Tag="11">
                                                            <Rectangle Fill="Black" Height="11" Width="80"></Rectangle>
                                                        </ToggleButton>
                                                    </StackPanel>
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Popup>
                                <ToggleButton Style="{StaticResource ToolbarButtonStyle}" VerticalAlignment="Stretch" Margin="2" ToolTip="Line style" Name="btnLineStyle">
                                    <Rectangle Width="27" Height="16">
                                        <Rectangle.Fill>
                                            <ImageBrush ImageSource="/CaptureViewer;component/Resources/line-style.png"></ImageBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </ToggleButton>
                                <Popup StaysOpen="False" Placement="Bottom" AllowsTransparency="True" Focusable="True" PopupAnimation="Fade" 
                                       SnapsToDevicePixels="True"  PlacementTarget="{Binding ElementName=btnLineStyle}"  
                                       IsOpen="{Binding Path=IsChecked, ElementName=btnLineStyle}"  HorizontalOffset="-4" Name="PopupLineStyle">
                                    <Grid Background="White" >
                                        <Border Background="#f6f6f6" BorderThickness="1" Margin="4" BorderBrush="#6593cf" CornerRadius="2">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Gray" ShadowDepth="0" BlurRadius="10"  />
                                            </Border.Effect>
                                            <Grid>
                                                <Border BorderThickness="0">
                                                    <StackPanel Orientation="Vertical">
                                                        <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2,4,2,0" ToolTip="No arrow" Height="20"
                                                                      Command="{x:Static cc:AnnotationControl.SelectLineStyleCommand}" CommandParameter="NoArrow" Tag="NoArrow">
                                                            <Rectangle Width="80" Height="16">
                                                                <Rectangle.Fill>
                                                                    <ImageBrush ImageSource="/CaptureViewer;component/Resources/no_arrow.png"></ImageBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                        </ToggleButton>
                                                        <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2,0,2,0" ToolTip="Arrow left" Height="20"
                                                                      Command="{x:Static cc:AnnotationControl.SelectLineStyleCommand}" CommandParameter="ArrowAtStart" Tag="ArrowAtStart">
                                                            <Rectangle Width="80" Height="16">
                                                                <Rectangle.Fill>
                                                                    <ImageBrush ImageSource="/CaptureViewer;component/Resources/left_arrow.png"></ImageBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                        </ToggleButton>
                                                        <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2,0,2,0" ToolTip="Arrow right" Height="20"
                                                                      Command="{x:Static cc:AnnotationControl.SelectLineStyleCommand}" CommandParameter="ArrowAtEnd" Tag="ArrowAtEnd">
                                                            <Rectangle Width="80" Height="16">
                                                                <Rectangle.Fill>
                                                                    <ImageBrush ImageSource="/CaptureViewer;component/Resources/right_arrow.png"></ImageBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                        </ToggleButton>
                                                        <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2,0,2,4" ToolTip="Arrow both side" Height="20"
                                                                      Command="{x:Static cc:AnnotationControl.SelectLineStyleCommand}" CommandParameter="ArrowAtBoth" Tag="ArrowAtBoth">
                                                            <Rectangle Width="80" Height="16">
                                                                <Rectangle.Fill>
                                                                    <ImageBrush ImageSource="/CaptureViewer;component/Resources/both_arrow.png"></ImageBrush>
                                                                </Rectangle.Fill>
                                                            </Rectangle>
                                                        </ToggleButton>
                                                    </StackPanel>
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Popup>
                                <ToggleButton Style="{StaticResource ToolbarButtonStyle}" VerticalAlignment="Stretch" Margin="2" ToolTip="Line color" x:Name="BtnLineColor">
                                    <StackPanel Width="27">
                                        <Rectangle Width="27" Height="16">
                                            <Rectangle.Fill>
                                                <ImageBrush ImageSource="/CaptureViewer;component/Resources/line-color.png"></ImageBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Border Focusable="False" Background="{Binding Path=SelectedLineColor, RelativeSource={RelativeSource TemplatedParent}}" Height="4" Margin="2,0,0,0" BorderThickness="0"  Width="16" HorizontalAlignment="Left">
                                        </Border>
                                    </StackPanel>
                                </ToggleButton>
                                <Popup StaysOpen="False" Placement="Bottom" AllowsTransparency="True" Focusable="True" PopupAnimation="Fade" 
                                       SnapsToDevicePixels="True"  PlacementTarget="{Binding ElementName=BtnLineColor}"  
                                       IsOpen="{Binding Path=IsChecked, ElementName=BtnLineColor}"  HorizontalOffset="-4" Name="PopupLineColor">
                                    <Grid Background="White" >
                                        <Border Background="#f6f6f6" BorderThickness="1" Margin="4" BorderBrush="#6593cf" CornerRadius="2">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Gray" ShadowDepth="0" BlurRadius="10"  />
                                            </Border.Effect>
                                            <Grid>
                                                <Border BorderThickness="0">
                                                    <StackPanel Orientation="Vertical">
                                                        <StackPanel Orientation="Horizontal">
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Yellow"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#ffff00" Tag="#ffff00">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#ffff00" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Bright green"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#00ff00" Tag="#00ff00">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#00ff00" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Turquoise"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#00ffff" Tag="#00ffff">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#00ffff" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Pink"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#ff00ff" Tag="#ff00ff">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#ff00ff" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Blue"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#0000ff" Tag="#0000ff">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#0000ff" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                        </StackPanel>
                                                        <StackPanel Orientation="Horizontal">
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Red"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#ff0000" Tag="#ff0000">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#ff0000" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Dark blue"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#000080" Tag="#000080">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#000080" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Teal"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#008080" Tag="#008080">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#008080" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Green"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#008000" Tag="#008000">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#008000" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Violet"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#800080" Tag="#800080">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#800080" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                        </StackPanel>
                                                        <StackPanel Orientation="Horizontal">
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Dark red"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#800000" Tag="#800000">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#800000" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Dark yellow"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#808000" Tag="#808000">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#808000" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Gray-50%"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#808080" Tag="#808080">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#808080" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Gray-25%"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#c0c0c0" Tag="#c0c0c0">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#c0c0c0" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                            <ToggleButton Style="{StaticResource PopupItemButtonStyle}" Margin="2" ToolTip="Black"
                                                                          Command="{x:Static cc:AnnotationControl.SelectLineColorCommand}" CommandParameter="#000000" Tag="#000000">
                                                                <Border BorderBrush="#a0a0a0" BorderThickness="1">
                                                                    <Rectangle Fill="#000000" Height="24" Width="24"></Rectangle>
                                                                </Border>
                                                            </ToggleButton>
                                                        </StackPanel>
                                                    </StackPanel>
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </StackPanel>
                        </cc:SeparateBorder>
                        <Popup Placement="Top" AllowsTransparency="True" Focusable="True" PopupAnimation="Fade" 
                               SnapsToDevicePixels="True"
                               IsOpen="{Binding Path=ShowOCRZoneToolbar}" StaysOpen="True">
                            <AdornerDecorator>
                                <cc:SeparateBorder Background="#e3efff" BorderBrush="#6f9dd9" 
                                                 BorderThickness="1" CornerRadius="2" Width="170"
                                                 Height="30" VerticalAlignment="Top" HorizontalAlignment="Left"
                                                 Cursor="Arrow">
                                    <Grid HorizontalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="Field:" Margin="2" Grid.Row="1"></TextBlock>
                                        <ComboBox Margin="2" Height="22" Background="White" Grid.Row="1" Grid.Column="1"
                                                  ItemsSource="{Binding Path=AnnotationInfo.MetaFields}"
                                                  SelectedItem="{Binding Path=AnnotationInfo.OCRTemplateZone.FieldMetaData, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  DisplayMemberPath="Name" HorizontalAlignment="Stretch">
                                        </ComboBox>
                                    </Grid>
                                </cc:SeparateBorder>
                            </AdornerDecorator>
                        </Popup>
                        <Grid.ToolTip>
                            <ToolTip Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Padding="0">
                                <Grid Background="White">
                                    <Border Background="#ffffff" BorderThickness="1" Margin="4" BorderBrush="#6593cf" CornerRadius="2">
                                        <Border.Effect>
                                            <DropShadowEffect Color="Gray" ShadowDepth="0" BlurRadius="10"  />
                                        </Border.Effect>
                                        <StackPanel Margin="5">
                                            <StackPanel Orientation="Horizontal" Margin="0,2,0,2">
                                                <TextBlock Text="Created by: " Style="{StaticResource ToolTipText}"></TextBlock>
                                                <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CreatedBy}" Style="{StaticResource ToolTipText}"></TextBlock>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="0,2,0,2">
                                                <TextBlock Text="Created on: " Style="{StaticResource ToolTipText}"></TextBlock>
                                                <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CreatedOn, Converter={StaticResource LongDateTimeConverter}}"
                                                           Style="{StaticResource ToolTipText}"></TextBlock>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="0,2,0,2">
                                                <TextBlock Text="Last modified by: " Style="{StaticResource ToolTipText}"></TextBlock>
                                                <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LastModifiedBy}" Style="{StaticResource ToolTipText}"></TextBlock>
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" Margin="0,2,0,2">
                                                <TextBlock Text="Last modified on: " Style="{StaticResource ToolTipText}"></TextBlock>
                                                <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=LastModifiedOn, Converter={StaticResource LongDateTimeConverter}}"
                                                           Style="{StaticResource ToolTipText}"></TextBlock>
                                            </StackPanel>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </ToolTip>
                        </Grid.ToolTip>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="AnnotationItemDecorator" Property="ShowDecorator" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ImageViewerToolButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0.85" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="0.5" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="DisabledOn">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="DisabledImage" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="DisabledOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="DisabledImage" Storyboard.TargetProperty="Opacity" To="0.75" />
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid">
                        <Border x:Name="BackgroundNorm" BorderThickness="0" CornerRadius="2" Background="Transparent" BorderBrush="Transparent"/>
                        <!--<Border x:Name="BackgroundNorm_highlight" BorderBrush="{DynamicResource NormalHighlightBrush}" BorderThickness="1" CornerRadius="2" Opacity="1" />-->
                        <Border x:Name="BackgroundOver" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="#53FFFFFF" Background="Transparent">
                        </Border>
                        <Border x:Name="BackgroundOver_Highlight" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>
                        <Border x:Name="BackgroundPressed" Background="Transparent" Opacity="0" BorderThickness="1" BorderBrush="{DynamicResource ToolbarButtonBorderBrush}" CornerRadius="2">
                            <Rectangle Margin="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#53FFFFFF" Offset="0"/>
                                        <GradientStop Offset="0.2"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border BorderBrush="Transparent" x:Name="IsMouseOverGlow" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="0" CornerRadius="2">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <RadialGradientBrush Center="0,0" GradientOrigin="0,0" RadiusY="1" RadiusX="0.8">
                                        <GradientStop Color="#9FFFFFFF" Offset="1"/>
                                        <GradientStop Color="#53FFFFFF" Offset="0.5"/>
                                        <GradientStop Offset="0"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border BorderBrush="{DynamicResource NormalBorderBrush}" x:Name="Shine" BorderThickness="0" Opacity="0" CornerRadius="2">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#9FFFFFFF" Offset="1"/>
                                        <GradientStop Color="#53FFFFFF" Offset="0.5"/>
                                        <GradientStop Offset="0" Color="#9FFFFFFF"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="BackgoundPressed_Highlight" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="Transparent"/>
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Background="Gray" BorderBrush="#9FFFFFFF" BorderThickness="0" Opacity="0" CornerRadius="2">
                        </Border>
                        <!--<Border BorderBrush="Transparent" x:Name="DisabledMouseOverGlow" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="0" CornerRadius="2">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <RadialGradientBrush Center="0,0" GradientOrigin="0,0" RadiusY="1" RadiusX="0.8">
                                        <GradientStop Color="#9FFFFFFF" Offset="0"/>
                                        <GradientStop Color="#53FFFFFF" Offset="0.5"/>
                                        <GradientStop Offset="1"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>-->
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                        <Border x:Name="DisabledImage" Opacity="0" VerticalAlignment="Stretch" Width="Auto" BorderThickness="0" CornerRadius="2" Background="LightGray"/>
                        <Border x:Name="FocusVisualElement" Margin="-1" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2" IsHitTestVisible="false" Opacity="0" />
                        <Border x:Name="DefaultBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="2" IsHitTestVisible="false" Opacity="0" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard1" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard1" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DisabledOn}" />
                            </Trigger.EnterActions>
                            <Setter Property="Opacity" TargetName="Grid" Value="0.3" />
                            <Setter Property="Background" Value="Gray"></Setter>
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ImageViewerToolToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0.85" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="0.5" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundOver" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="IsMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="Shine" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="1" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="1" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="BackgoundPressed_Highlight" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="DisabledOn">
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="DisabledMouseOverGlow" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00.1000000" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="DisabledOff">
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To="0" />
                            <DoubleAnimation Duration="00:00:00.1000000" Storyboard.TargetName="DisabledMouseOverGlow" Storyboard.TargetProperty="Opacity" To="0" />
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid">
                        <Border x:Name="BackgroundNorm" BorderThickness="0" CornerRadius="2" Background="Transparent" BorderBrush="Transparent"/>
                        <!--<Border x:Name="BackgroundNorm_highlight" BorderBrush="{DynamicResource NormalHighlightBrush}" BorderThickness="1" CornerRadius="2" Opacity="1" />-->
                        <Border x:Name="BackgroundOver" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="#53FFFFFF" Background="Transparent">
                        </Border>
                        <Border x:Name="BackgroundOver_Highlight" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="{DynamicResource MouseOverBorderBrush}"/>
                        <Border x:Name="BackgroundPressed" Background="Transparent" Opacity="0" BorderThickness="1" BorderBrush="{DynamicResource ToolbarButtonBorderBrush}" CornerRadius="2">
                            <Rectangle Margin="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#53FFFFFF" Offset="0"/>
                                        <GradientStop Offset="0.2"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border BorderBrush="Transparent" x:Name="IsMouseOverGlow" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="0" CornerRadius="2">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <RadialGradientBrush Center="0,0" GradientOrigin="0,0" RadiusY="1" RadiusX="0.8">
                                        <GradientStop Color="#9FFFFFFF" Offset="1"/>
                                        <GradientStop Color="#53FFFFFF" Offset="0.5"/>
                                        <GradientStop Offset="0"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border BorderBrush="{DynamicResource NormalBorderBrush}" x:Name="Shine" BorderThickness="0" Opacity="0" CornerRadius="2">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#9FFFFFFF" Offset="1"/>
                                        <GradientStop Color="#53FFFFFF" Offset="0.5"/>
                                        <GradientStop Offset="0" Color="#9FFFFFFF"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border x:Name="BackgoundPressed_Highlight" BorderThickness="1" CornerRadius="2" Opacity="0" BorderBrush="Transparent"/>
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Background="Gray" BorderBrush="#9FFFFFFF" BorderThickness="0" Opacity="0" CornerRadius="2">
                        </Border>
                        <Border BorderBrush="Transparent" x:Name="DisabledMouseOverGlow" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="0" CornerRadius="2">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <RadialGradientBrush Center="0,0" GradientOrigin="0,0" RadiusY="1" RadiusX="0.8">
                                        <GradientStop Color="#9FFFFFFF" Offset="0"/>
                                        <GradientStop Color="#53FFFFFF" Offset="0.5"/>
                                        <GradientStop Offset="1"/>
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border BorderBrush="Transparent" x:Name="BackgroundChecked" Background="{DynamicResource PressedBrush}" VerticalAlignment="Stretch" Width="Auto" Opacity="0" BorderThickness="0" CornerRadius="2">
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
                        <Border x:Name="FocusVisualElement" Margin="-1" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2" IsHitTestVisible="false" Opacity="0" />
                        <Border x:Name="DefaultBorder" BorderBrush="Transparent" BorderThickness="0" CornerRadius="2" IsHitTestVisible="false" Opacity="0" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard1" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard1" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="BackgroundChecked" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource DisabledOn}" />
                            </Trigger.EnterActions>
                            <Setter Property="Opacity" TargetName="Grid" Value="0.3" />
                            <Setter Property="Background" Value="Gray"></Setter>
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid Height="16" Background="Transparent" x:Name="Bd">
                        <Path x:Name="Arrow" Fill="{DynamicResource CollaspeExpandColor}" 
                              Stroke="{DynamicResource CollaspeExpandColor}" 
                              StrokeThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="10" Height="10" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="UpArrow">
                            <Setter TargetName="Arrow" Property="Data" Value="M 0,5 L 5,0 L 10,5 L 0,5"/>
                        </Trigger>
                        <Trigger Property="theme:ScrollChrome.ScrollGlyph" Value="DownArrow">
                            <Setter TargetName="Arrow" Property="Data" Value="M 0,0 L 5,5 L 10,0 L 0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource QuickAccessBackgroundHover}"></Setter>
                            <Setter TargetName="Bd" Property="Opacity" Value="0.7"></Setter>
                            <Setter TargetName="Bd" Property="OpacityMask" Value="#FFFFFF"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ImageViewerToolScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Width" Value="39"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Trigger.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid SnapsToDevicePixels="true" HorizontalAlignment="Stretch">
                                    <RepeatButton Style="{StaticResource ScrollBarButton}" Background="#FFFFFFFF" Grid.Row="1"
                                                  VerticalAlignment="Top"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Command="{x:Static ScrollBar.LineUpCommand}"
                                                  theme:ScrollChrome.ScrollGlyph="UpArrow">
                                    </RepeatButton>
                                    <RepeatButton Style="{StaticResource ScrollBarButton}"
                                                  Background="#FFFFFFFF"
                                                  VerticalAlignment="Bottom"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Command="{x:Static ScrollBar.LineDownCommand}"
                                                  theme:ScrollChrome.ScrollGlyph="DownArrow">
                                    </RepeatButton>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger.Setters>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ImageViewerToolScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Style="{StaticResource ImageViewerToolScrollBar}"
                                   Minimum="0.0"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"         
                                   Cursor="Arrow"
                                   AutomationProperties.AutomationId="VerticalScrollBar"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ScrollViewer.ComputedVerticalScrollBarVisibility" Value="Visible">
                            <Setter Property="Margin" TargetName="PART_ScrollContentPresenter" Value="0,20,0,20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="SeparatorBar" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource LightBlueBackgroundColor}"></Setter>
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="Height" Value="1"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Margin" Value="0,5,0,5"></Setter>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"></Setter>
    </Style>
    
    <Style TargetType="{x:Type local:KeyLessScrollViewer}">
        <Style.Resources>
            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">26</sys:Double>
            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">26</sys:Double>
            <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">26</sys:Double>
            <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">26</sys:Double>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0"/>
                        <ScrollBar Name="PART_VerticalScrollBar" Grid.RowSpan="2" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Scrollbar-->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                            Margin="1" 
                            CornerRadius="2" 
                            Background="{StaticResource NormalBrush}"
                            BorderBrush="{StaticResource NormalBorderBrush}"
                            BorderThickness="1">
                        <Path x:Name="Arrow"
                              Data="M 1,5 L 4.5,1 8,5"
                              Stroke="#FF666666"
                              StrokeThickness="2"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2" x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="3"/>
                                <RowDefinition Height="3"/>
                                <RowDefinition Height="3"/>
                            </Grid.RowDefinitions>
                            <Rectangle Fill="#4e6172" Stroke="DarkGreen" Margin="2,1,2,1"/>
                            <Rectangle Fill="#4e6172" Stroke="DarkGreen" Margin="2,1,2,1" Grid.Row="1"/>
                            <Rectangle Fill="#4e6172" Stroke="DarkGreen" Margin="2,1,2,1" Grid.Row="2"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2" x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3"/>
                                <ColumnDefinition Width="3"/>
                                <ColumnDefinition Width="3"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="#4e6172" Stroke="DarkGreen" Margin="1,2,1,2"/>
                            <Rectangle Fill="#4e6172" Stroke="DarkGreen" Margin="1,2,1,2" Grid.Column="1"/>
                            <Rectangle Fill="#4e6172" Stroke="DarkGreen" Margin="1,2,1,2" Grid.Column="2"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="22"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="22"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="22"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                    CornerRadius="2" 
                    Background="#F0F0F0" />
            <RepeatButton Grid.Row="0"                           
                          Style="{StaticResource ScrollBarLineButton}"
                          Height="22"
                          Command="ScrollBar.LineUpCommand">
                <RepeatButton.RenderTransform>
                    <RotateTransform Angle="0" CenterX="11" CenterY="11"></RotateTransform>
                </RepeatButton.RenderTransform>
            </RepeatButton>
            <Track Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource VerticalScrollBarThumb}" 
                           Margin="1,0,1,0"  
                           Background="{StaticResource VerticalScrollBarBrush}"
                           BorderBrush="{StaticResource ScrollbBarBorderBrush}">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton 
              Grid.Row="3" 
              Style="{StaticResource ScrollBarLineButton}"
              Height="22"
              Command="ScrollBar.LineDownCommand">
                <RepeatButton.RenderTransform>
                    <RotateTransform Angle="180" CenterX="11" CenterY="11"></RotateTransform>
                </RepeatButton.RenderTransform>
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="22"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="22"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="22"/>
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                    CornerRadius="2" 
                    Background="#F0F0F0" />
            <RepeatButton Grid.Column="0"                           
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="22"
                          Command="ScrollBar.LineLeftCommand">
                <RepeatButton.RenderTransform>
                    <RotateTransform Angle="-90" CenterX="11" CenterY="11"></RotateTransform>
                </RepeatButton.RenderTransform>
            </RepeatButton>
            <Track Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource HorizontalScrollBarThumb}" 
                           Margin="0,1,0,1"  
                           Background="{StaticResource HorizontalScrollBarBrush}"
                           BorderBrush="{StaticResource ScrollbBarBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" 
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="22"
                          Command="ScrollBar.LineRightCommand">
                <RepeatButton.RenderTransform>
                    <RotateTransform Angle="90" CenterX="11" CenterY="11"></RotateTransform>
                </RepeatButton.RenderTransform>
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="22" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="22"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Style.Resources>
            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">26</sys:Double>
            <sys:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">26</sys:Double>
            <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarHeightKey}">26</sys:Double>
            <sys:Double x:Key="{x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}">26</sys:Double>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0"/>
                        <ScrollBar Name="PART_VerticalScrollBar" Grid.RowSpan="2" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal"  Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="AboutText">
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Black"/>

    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="SearchListText">
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="SigninHeaderText">
        <Setter Property="Height" Value="80"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="Margin" Value="2,2,0,0"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ProductText">
        <Setter Property="Height" Value="60"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="Margin" Value="2,2,0,0"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="DisplayViewText">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="DisplayViewText2">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="DialogText">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="MenuText">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="LoginInfo">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="ButtonTextStyle">
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" x:Key="CommandNoteStyle">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    
    <Style TargetType="{x:Type TextBlock}" x:Key="CommandTitleStyle">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    
    <Style TargetType="{x:Type DatePickerTextBox}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <TextBox x:Name="PART_TextBox"
     Text="{Binding Path=SelectedDate, StringFormat='MM/dd/yyyy', 
     RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>