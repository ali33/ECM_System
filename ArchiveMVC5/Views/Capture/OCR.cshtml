@model IEnumerable<ArchiveMVC5.Models.FieldValueModel>
<script src="~/plugins/datepicker/bootstrap-datepicker.js" type="text/javascript"></script>


@if (Model != null)
{

    foreach (var fieldValue in Model)
    {
        var docType = ArchiveMVC5.Utility.Utilities.DocumentType(fieldValue.Field.DocTypeId);
        var isCapture = ViewContext.RouteData.GetRequiredString("controller").Equals("Capture");
        var isDisable = !(isCapture || docType.DocumentTypePermission.AllowedUpdateFieldValue);
        var inputClass = "";
        var validateClass="";
        
        if (fieldValue.Field.DataType == Ecm.Domain.FieldDataType.Date)
        {
            inputClass = "date";
        }
        else if (fieldValue.Field.DataType == Ecm.Domain.FieldDataType.Integer)
        {
            inputClass = "allownumericwithdecimal";

            if (fieldValue.Field.IsLookup)
            {
                inputClass += " lookup";
            }
        }
        else if (fieldValue.Field.DataType == Ecm.Domain.FieldDataType.Decimal)
        {
            inputClass = "allownumericwithoutdecimal";

            if (fieldValue.Field.IsLookup)
            {
                inputClass += " lookup";
            }
        }
        else if (fieldValue.Field.DataType == Ecm.Domain.FieldDataType.String && fieldValue.Field.IsLookup)
        {
            inputClass += "lookup";
        }

        if (!fieldValue.Field.IsSystemField && fieldValue.Field.IsRequired)
        {
            validateClass = "validate";
        }
        
        if (!fieldValue.Field.IsSystemField ||
            (fieldValue.Field.IsRestricted && docType.DocumentTypePermission.AllowedSeeRetrictedField))
        {
            <div class="from-group content_fields_input">
                <label class="label-control">@fieldValue.Field.Name</label> @if (fieldValue.Field.IsRequired)
                                                                            {<span class="text-red">*</span>}
                    @if (fieldValue.Field.DataType == Ecm.Domain.FieldDataType.Picklist)
                    {
                        <select class="form-control input-sm">
                            @if (fieldValue.PickListValues != null)
                            {
                                foreach (var picklistValues in fieldValue.PickListValues)
                                {
                                    <option>@picklistValues</option>
                                }
                            }
                        </select>
                    }
                    else if (fieldValue.Field.DataType == Ecm.Domain.FieldDataType.Boolean)
                    {
                        <input type="checkbox" @(fieldValue.Value == "True" ? "checked" : "") class="@validateClass"/>
                    }
                    else if (fieldValue.Field.DataType == Ecm.Domain.FieldDataType.Table)
                    {
                        <input type="text" class="form-control input-sm table_field_value" placeholder="Click here to display @fieldValue.Field.Name values"/>
                        <input type="hidden" value="@fieldValue.Field.DocTypeId" class="docTypeId"/>
                    }
                    else if (fieldValue.Field.DataType == Ecm.Domain.FieldDataType.Date)
                    {
                        var dateId = @fieldValue.Field.Id + "dateValue";
                        <input id="@dateId"  type='text' class='form-control input-sm date @validateClass' value="@fieldValue.Value" @(isDisable ? "disabled='disable'" : "")>
                    <script>
                        $(function () {
                            var datepicker = $.fn.datepicker.noConflict();
                            $.fn.bootstrapDP = datepicker;
                            $("#@dateId").bootstrapDP();
                        });
                    </script>
                    }
                    else
                    {
                        <input type="text" data-date-format='mm/dd/yyyy' value="@fieldValue.Value" @(isDisable ? "disabled='disable'" : "") class="form-control input-sm @inputClass @validateClass" />
                        if (fieldValue.Field.IsLookup)
                        {
                            <div id="@fieldValue.Field.Id" style="display:block; position:absolute; z-index:9000; background-color:whitesmoke; border: 1px solid #0094ff; margin:5px">

                            </div>
                        }
                    }
                    <input type="hidden" value="@(fieldValue.Field.OCRTemplateZone != null ? fieldValue.Field.OCRTemplateZone.Left.ToString() : " ")" class="left" />
                    <input type="hidden" value="@(fieldValue.Field.OCRTemplateZone != null ? fieldValue.Field.OCRTemplateZone.Top.ToString() : " ")" class="top" />
                    <input type="hidden" value="@(fieldValue.Field.OCRTemplateZone != null ? fieldValue.Field.OCRTemplateZone.Width.ToString() : " ")" class="width" />
                    <input type="hidden" value="@(fieldValue.Field.OCRTemplateZone != null ? fieldValue.Field.OCRTemplateZone.Height.ToString() : " ")" class="height" />
                    <input type="hidden" value="@fieldValue.Field.Id" class="id"/>
                    <input type="hidden" value="@fieldValue.Field.Name" class="name"/>

                    @if (docType.OCRTemplate != null && fieldValue.Field.OCRTemplateZone != null)
                    {
                        var templatePage = docType.OCRTemplate.OCRTemplatePages.Single(
                                                p => p.Id == fieldValue.Field.OCRTemplateZone.OCRTemplatePageId);
                        <input type="hidden" value="@templatePage.PageIndex" class="pageIndex" />
                    }
            </div>
        }
    }
}

@if (ViewData["ERROR"] != null)
{
    <script>
        alert("OCR ERROR");
        window.console.log(@ViewData["ERROR"]);

    </script>
}

<!-- /.modal -->
<div class="modal" id="tableViewDialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" aria-label="Close" type="button" data-dismiss="modal"><span aria-hidden="true">×</span></button>
                <h4 class="modal-title">Table values</h4>
            </div>
            <div class="modal-body">
                <div id="tableFieldValue" class="table-responsive">
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn bg-olive btn-sm" type="button" data-dismiss="modal">Close</button>
                <button class="btn bg-olive btn-sm" type="button" id="btSaveTableValue">Save changes</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
    <input type="hidden" id="FieldId" />
</div>
