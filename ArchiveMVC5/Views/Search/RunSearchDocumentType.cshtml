@model ArchiveMVC5.Models.SearchResultModel
@if (ViewData["SearchError"] != null)
{
    <div class="row">
        <div class="alert alert-danger alert-dismissable">
            <h4><i class="icon fa fa-ban"></i> Alert!</h4>
            @ViewData["SearchError"].ToString()
        </div>
    </div>

}
else
{
    if (Model != null)
    {
<div class="">
        <div class="datagript_header">
            <div>
                <div>
                    <strong class="name">@Model.DocumentTypeName</strong>
                    <span> - </span>
                    <span class="count"><span class="count_display_doc">0</span>/
                        <span class="count_total_doc">@Model.TotalCount</span> doc(s) found</span>
                    @if (Model.ResultCount < Model.TotalCount)
                    { 
                        <a href="#" id="hasMoreResult"
                            data-hasmore="" 
                            data-pageindex="">Has more result</a>
                    }
                </div>
            </div>
        </div>
    <div class="datagript_body">
        @{            var UniqueKey = ArchiveMVC5.Utility.UniqueId.GetUniqueKey();
        }
        <div class="table-responsive">

            <table class="table table-striped table-hover" id="@UniqueKey">
                <thead>
                    <tr>
                        @{
        List<string> listColumn = new List<string>();
                        }
                        @foreach (var item in Model.DataResult.Columns)
                        {
                            var name = "";
                            switch (item.ToString())
                            {
                                case ArchiveMVC5.Models.Common.COLUMN_CHECKED:
                                case ArchiveMVC5.Models.Common.COLUMN_SELECTED:

                                    break;
                                case ArchiveMVC5.Models.Common.COLUMN_PAGE_COUNT:
                                    listColumn.Add(item.ToString());
                                    name = "Page Count";                                
                            <th class="">@name</th>    
                                break;

                            case ArchiveMVC5.Models.Common.COLUMN_MODIFIED_ON:
                                listColumn.Add(item.ToString());
                                name = "Modified Date";
                            <th class="">@name</th>    
                                break;
                            case ArchiveMVC5.Models.Common.COLUMN_MODIFIED_BY:
                                listColumn.Add(item.ToString());
                                name = "Modified By";                                
                            <th class="">@name</th>    
                                break;
                            case ArchiveMVC5.Models.Common.COLUMN_CREATED_ON:
                                listColumn.Add(item.ToString());
                                name = "Create Date";                                
                            <th class="">@name</th>    
                                break;
                            case ArchiveMVC5.Models.Common.COLUMN_CREATED_BY:
                                listColumn.Add(item.ToString());
                                name = "Create By";                                
                            <th class="">@name</th>    
                                break;
                            case ArchiveMVC5.Models.Common.COLUMN_VERSION:
                            case ArchiveMVC5.Models.Common.COLUMN_DOCUMENT_ID:
                            case ArchiveMVC5.Models.Common.COLUMN_DOCUMENT:
                            case ArchiveMVC5.Models.Common.COLUMN_DOCUMENT_TYPE_ID:
                            case ArchiveMVC5.Models.Common.COLUMN_DOCUMENT_VERSION_ID:
                                break;
                            default:
                                listColumn.Add(item.ToString());
                                name = item.ToString();                                
                            <th class="">@name</th>    
                                break;
                        }
                    }
                    </tr>
                </thead>
                <tbody>
                    @RenderPage("RowsSearchResult.cshtml", Model)
                </tbody>
            </table>
        </div>
    </div>
    </div>

<script>
    $('#hasMoreResult').click(function () {
        if ($(this).data('hasmore')) {
            var pageIndex = parseInt($(this).data('pageindex')) + 1;
            $('.datagript_result').ecm_loading_show();

            JsonHelper.helper.post(
               URL_RunSearchDocumentType,
               JSON.stringify({ docType: '@Model.DocumentType.Id', pageIndex: pageIndex }),
               function (data) {
                   $("#@UniqueKey tbody").append(data);
                   $('.datagript_result').ecm_loading_hide();
                   var resultCount = parseInt($('.count span.count_display_doc').text());
                   var totalCount = parseInt($('.count span.count_total_doc').text());

                   if (resultCount >= totalCount)
                       $('#hasMoreResult').remove();
               },
               Search_Error);
           }
    });

    $('#@UniqueKey').dataTable(
        {
            //"sScrollY": "50%" ,
            //"sScrollYInner": "50%",
            "aoColumnDefs": [
                { "bSortable": false, "aTargets": [0] }
            ],
            "bScrollCollapse": false,
            "bPaginate": true,
            "bFilter": false,
            "bSearchable": false,
            "bInfo": false,
            "bDestroy": true,
            "sPaginationType": "bootstrap",
            "bSort": true,
            "bProcessing": true,
            "bServerSide": true,
            //"sAjaxSource": "scripts/Search.js",
            //"fnServerData": ContentSearch
        }
    );

</script>
}}