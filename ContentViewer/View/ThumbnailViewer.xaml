<UserControl x:Class="Ecm.ContentViewer.View.ThumbnailViewer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cc="clr-namespace:Ecm.CustomControl;assembly=CustomControl"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Style.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <Style x:Key="ThumbnialContextMenu" BasedOn="{StaticResource {x:Type ContextMenu}}">
                <Setter Property="MenuItem.Header" Value="{Binding Path=Header}"/>
                <Setter Property="MenuItem.ItemsSource" Value="{Binding Path=Children}"/>
                <Setter Property="MenuItem.Icon" Value="{Binding Path=Icon}"/>
                <Setter Property="MenuItem.IsCheckable" Value="{Binding Path=IsCheckable}"/>
                <Setter Property="MenuItem.IsChecked" Value="{Binding Path=IsChecked}"/>
                <Setter Property="MenuItem.Command" Value="{Binding Path=Command}"/>
                <Setter Property="MenuItem.CommandParameter" Value="{Binding Path=CommandParameter}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsSeparator}" Value="true">
                        <Setter Property="MenuItem.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Separator Style="{DynamicResource {x:Static MenuItem.SeparatorStyleKey}}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <ContextMenu x:Key="ContextMenu" ItemsSource="{Binding Path=MenuItems}"
                         MinWidth="250" 
                         ItemContainerStyle="{StaticResource ThumbnialContextMenu}">
            </ContextMenu>
        </Grid.Resources>
        <cc:KeyLessScrollViewer ScrollViewer.VerticalScrollBarVisibility="Auto" Name="myScrollViewer"
                                VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"
                                PreviewKeyDown="ThumbnailPreviewKeyDown">
            <TreeView ItemsSource="{Binding Path=Items, Mode=TwoWay, ElementName=Me}" Name="tvwThumbnail" FocusVisualStyle="{x:Null}"
                      VirtualizingStackPanel.IsVirtualizing="true" 
                      VirtualizingStackPanel.VirtualizationMode="Recycling" AllowDrop="True"
                      PreviewMouseDown="ThumbnailMouseDown"
                      PreviewMouseUp="ThumbnailMouseUp"
                      MouseMove="ThumbnailMouseMove"
                      DragOver="ThumbnailDragOver"
                      Drop="ThumbnailDrop"
                      ContextMenuClosing="ThumbnailContextMenuClosing"
                      ContextMenuOpening="ThumbnailContextMenuOpening">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <StackPanel Margin="10,0,10,0" IsHitTestVisible="False" VerticalAlignment="Center">
                            <TextBlock Text="{Binding Title1}" Visibility="{Binding Path=Title1, Converter={StaticResource StringBoolVisibilityConverter}}" FontSize="16" Opacity="0.7" FontWeight="Bold" />
                            <TextBlock Text="{Binding TitleBig1}" Visibility="{Binding Path=TitleBig1, Converter={StaticResource StringBoolVisibilityConverter}}" FontSize="50" Opacity="0.2" Margin="0,0,0,5" />
                            <TextBlock Text="{Binding Title2}" Visibility="{Binding Path=Title2, Converter={StaticResource StringBoolVisibilityConverter}}" FontSize="10" Margin="0,2,0,2" />
                            <TextBlock Text="{Binding Title2Trans}" Visibility="{Binding Path=Title2Trans, Converter={StaticResource StringBoolVisibilityConverter}}" FontSize="10" Opacity="0.5" Margin="0,2,0,2" />
                            <TextBlock Text="{Binding Title3}" Visibility="{Binding Path=Title3, Converter={StaticResource StringBoolVisibilityConverter}}" FontSize="10" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
                <TreeView.Style>
                    <Style TargetType="{x:Type TreeView}">
                        <Setter Property="ContextMenu" Value="{StaticResource ContextMenu}"></Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TreeView">
                                    <Grid Background="Transparent">
                                        <ItemsPresenter/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.Style>
                <TreeView.Resources>
                    <Style x:Key="TreeViewItemFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <EventSetter Event="Loaded" Handler="ThumbnailItemLoaded"/>
                        <Setter Property="IsExpanded" Value="True" />
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                    <StackPanel Background="Transparent">
                                        <Border Background="Transparent" BorderBrush="Transparent" CornerRadius="2" x:Name="ItemContainer" MinHeight="80">
                                            <Grid Background="Transparent">
                                                <Grid Margin="0,0,0,4">
                                                    <Border x:Name="ItemBorder" Background="Transparent" BorderThickness="1" BorderBrush="Transparent" IsHitTestVisible="False" Focusable="False"></Border>
                                                    <Border x:Name="ItemMargin" Background="Transparent" Margin="1" CornerRadius="2" BorderThickness="0" IsHitTestVisible="False" Focusable="False"></Border>
                                                    <Border x:Name="ItemBackground" Background="Transparent" Margin="1" CornerRadius="2" BorderThickness="0" IsHitTestVisible="False" Focusable="False"></Border>
                                                    <Grid Background="Transparent" Margin="{Binding Converter={StaticResource ThumbnailMarginMultiplierConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="Auto"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ToggleButton x:Name="Expander" Style="{StaticResource CollapseExpandButton}" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" FocusVisualStyle="{x:Null}" VerticalAlignment="Center" Margin="10,0,0,0">
                                                        </ToggleButton>
                                                        <Grid Grid.Column="1" Margin="15,3,0,5" IsHitTestVisible="False" Focusable="False">
                                                            <Rectangle Fill="{Binding Path=ThumbnailCollasped}" Height="{Binding Path=ThumbnailHeight}" Width="{Binding Path=ThumbnailWidth}"  Name="thumbnail">
                                                                <Rectangle.Effect>
                                                                    <DropShadowEffect Color="#a5acb5" Direction="-45" BlurRadius="0" ShadowDepth="3" />
                                                                </Rectangle.Effect>
                                                            </Rectangle>
                                                            <Image Visibility="{Binding Path=IsValid, Converter={StaticResource BoolVisibilityConverter}}" Source="/ContentViewer;component/Resources/Images/accept.png" Width="32" Height="32" HorizontalAlignment="Right" VerticalAlignment="Bottom"></Image>
                                                            <Image Visibility="{Binding Path=Rejected, Converter={StaticResource BoolVisibilityConverter}}" Source="/ContentViewer;component/Resources/Images/reject.png" Width="32" Height="32" HorizontalAlignment="Right" VerticalAlignment="Bottom"></Image>
                                                        </Grid>
                                                        <Grid Grid.Column="2" Margin="15,2,0,2" IsHitTestVisible="False" Focusable="False">
                                                            <ContentPresenter x:Name="PART_Header" HorizontalAlignment="Stretch" ContentSource="Header"/>
                                                        </Grid>
                                                        <Grid Grid.Column="1" Grid.ColumnSpan="2" Background="Transparent" Margin="0,0,0,-4"/>
                                                        <!--For capture drag/drop-->
                                                    </Grid>
                                                </Grid>
                                                <Grid Height="8" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" x:Name="DropIndicator" Visibility="Collapsed" IsHitTestVisible="False" Focusable="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="8"></ColumnDefinition>
                                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                                        <ColumnDefinition Width="8"></ColumnDefinition>
                                                    </Grid.ColumnDefinitions>
                                                    <Path Stroke="Blue" StrokeThickness="4" Data="M 0,0 L 4,4 L 0,8">
                                                    </Path>
                                                    <Border Background="Blue" Grid.Column="1" Height="4" Margin="-4,0,-4,0"></Border>
                                                    <Path Stroke="Blue" StrokeThickness="4" Data="M 8,0 L 4,4 L 8,8" Grid.Column="2">
                                                    </Path>
                                                </Grid>
                                            </Grid>
                                            <Border.Triggers>
                                                <EventTrigger RoutedEvent="Border.DragEnter">
                                                    <BeginStoryboard x:Name="ItemBeginStoryboard">
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropIndicator" Storyboard.TargetProperty="Visibility" Duration="0:0:0">
                                                                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" />
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="Border.DragLeave">
                                                    <StopStoryboard BeginStoryboardName="ItemBeginStoryboard"/>
                                                </EventTrigger>
                                                <EventTrigger RoutedEvent="Border.Drop">
                                                    <StopStoryboard BeginStoryboardName="ItemBeginStoryboard"/>
                                                </EventTrigger>
                                            </Border.Triggers>
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost" VerticalAlignment="Center" />
                                    </StackPanel>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsExpanded" Value="false">
                                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsExpanded" Value="true">
                                            <Setter Property="Fill" TargetName="thumbnail" Value="{Binding Path=ThumbnailExpanded}"/>
                                        </Trigger>
                                        <Trigger Property="HasItems" Value="false">
                                            <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                                            <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource ThumbnailSelect_Border}"/>
                                            <Setter Property="Background" TargetName="ItemMargin" Value="{StaticResource ThumbnailSelect_Margin}"/>
                                            <Setter Property="Background" TargetName="ItemBackground" Value="{StaticResource ThumbnailSelect}"/>
                                        </DataTrigger>
                                        <Trigger SourceName="ItemContainer" Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource ThumbnailHover_Border}"/>
                                            <Setter Property="Background" TargetName="ItemBackground" Value="{StaticResource ThumbnailHover}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TreeView.Resources>
            </TreeView>
        </cc:KeyLessScrollViewer>
    </Grid></UserControl>
