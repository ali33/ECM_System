<UserControl x:Class="Ecm.Admin.View.TableConfigurationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cc="clr-namespace:Ecm.CustomControl;assembly=CustomControl" Width="800">
    <UserControl.Resources>
        <ControlTemplate x:Key="EmptyCellTemplate">
            <TextBlock/>
        </ControlTemplate>
        <ControlTemplate x:Key="IntegerDefaultValueCellTemplate">
            <TextBox cc:NumericTextBoxBehavior.Mask="Integer" 
                     cc:NumericTextBoxBehavior.MinimumValue="-2147483648"
                     cc:NumericTextBoxBehavior.MaximumValue="2147483647"
                     Text="{Binding Path=DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     VerticalContentAlignment="Stretch" IsTabStop="True" Width="200" HorizontalAlignment="Left"
                     x:Name="txtDefaultValue" />
        </ControlTemplate>
        <ControlTemplate x:Key="DecimalDefaultValueCellTemplate">
            <TextBox cc:NumericTextBoxBehavior.Mask="Decimal" MaxLength="15"  
                     Text="{Binding Path=DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     IsTabStop="True" Width="200" HorizontalAlignment="Left" VerticalContentAlignment="Stretch"
                     x:Name="txtDefaultValue" />
        </ControlTemplate>
        <ControlTemplate x:Key="StringDefaultValueCellTemplate">
            <TextBox Text="{Binding Path=DefaultValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     MaxLength="255" IsTabStop="True" Width="200" HorizontalAlignment="Left" VerticalContentAlignment="Stretch"
                     x:Name="txtDefaultValue" />
        </ControlTemplate>
        <ControlTemplate x:Key="DateDefaultValueCellTemplate">
            <CheckBox IsChecked="{Binding Path=UseCurrentDate, Mode=TwoWay}" Content="Use current date"
                      VerticalContentAlignment="Center" HorizontalAlignment="Left" />
        </ControlTemplate>

        <DataTemplate x:Key="CellColumnNameTemplate">
            <TextBox Text="{Binding Path=ColumnName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     MaxLength="255" IsTabStop="True" Width="150" HorizontalAlignment="Left"
                     x:Name="txtColumnName"/>
        </DataTemplate>
        <DataTemplate x:Key="CellDataTypeTemplate">
            <ComboBox IsTabStop="False" SelectedItem="{Binding Path=DataTypeName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                      ItemsSource="{Binding Path=SupportedDataTypes}" Width="Auto">
            </ComboBox>
        </DataTemplate>
        <DataTemplate x:Key="CellMaxLengthTemplate">
            <TextBox MaxLength="4" Text="{Binding Path=MaxLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     cc:NumericTextBoxBehavior.Mask="Integer" IsTabStop="True"
                     cc:NumericTextBoxBehavior.MinimumValue="0" IsEnabled="False"
                     cc:NumericTextBoxBehavior.MaximumValue="8000"
                     x:Name="txtMaxLength"
                     Width="120" HorizontalAlignment="Left" VerticalContentAlignment="Stretch"/>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=DataTypeName}" Value="String"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="txtMaxLength" Property="IsEnabled" Value="True"></Setter>
                </MultiDataTrigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border BorderBrush="Transparent" BorderThickness="0">
                                    <AdornedElementPlaceholder Name="MyAdorner" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="CellDecimalPointTemplate">
            <TextBox MaxLength="2" Text="{Binding Path=DecimalScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                     cc:NumericTextBoxBehavior.Mask="Integer" IsTabStop="True"
                     cc:NumericTextBoxBehavior.MinimumValue="0" IsEnabled="False"
                     cc:NumericTextBoxBehavior.MaximumValue="28"
                     x:Name="txtDecimalPoint"
                     Width="120" HorizontalAlignment="Left" VerticalContentAlignment="Stretch"/>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=DataTypeName}" Value="Decimal"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="txtDecimalPoint" Property="IsEnabled" Value="True"></Setter>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="CellIsRequiredTemplate">
            <CheckBox IsChecked="{Binding Path=IsRequired,Mode=TwoWay}" VerticalContentAlignment="Center" HorizontalAlignment="Left" />
        </DataTemplate>
        <DataTemplate x:Key="CellIsRestrictedTemplate">
            <CheckBox IsChecked="{Binding Path=IsRestricted,Mode=TwoWay}" VerticalContentAlignment="Center" HorizontalAlignment="Left" />
        </DataTemplate>
        <DataTemplate x:Key="CellDefaultValueTemplate">
            <Control x:Name="control" Focusable="False" Template="{StaticResource EmptyCellTemplate}" />
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=DataTypeName}" Value="Date"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource DateDefaultValueCellTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=DataTypeName}" Value="Integer"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource IntegerDefaultValueCellTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=DataTypeName}" Value="Decimal"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource DecimalDefaultValueCellTemplate}"></Setter>
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Path=DataTypeName}" Value="String"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="control" Property="Template" Value="{StaticResource StringDefaultValueCellTemplate}"></Setter>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="RemoveCellTemplate">
            <Button Command="{Binding Path=RemoveCommand}" Style="{StaticResource FlatButton}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="Auto" Height="Auto">
                            <Image Source="../Resources/Images/delete16.png" Width="16" Height="16"/>
                        </Grid>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
        </DataTemplate>
        <CollectionViewSource x:Key="ColumnItemsSource" Source="{Binding Path=ColumnItems}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="FakeGroup" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <ContextMenu x:Key="GridItemContextMenu">
            <MenuItem Header="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=mnRemove}" Command="{Binding Path=RemoveCommand}"></MenuItem>
        </ContextMenu>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBlock Text="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=txtTableColumnConfig}" Style="{StaticResource DisplayViewHeaderText}" Margin="5"/>
        <Border Style="{StaticResource Separator}" Grid.Row="1"/>
        <cc:SortableListView SelectionMode="Single" x:Name="lvwTableDataTypeView" Grid.Row="2"
                             ItemsSource="{Binding Source={StaticResource ColumnItemsSource}, NotifyOnTargetUpdated=True}"
                             IsSynchronizedWithCurrentItem="True" TargetUpdated="ListView_TargetUpdated" FocusVisualStyle="{x:Null}" 
                             cc:ListViewLayoutManager.Enabled="True"
                             KeyboardNavigation.TabNavigation="Continue" BorderBrush="Transparent" BorderThickness="0,1,0,0">
            <cc:SortableListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"  />
                    <Setter Property="Margin" Value="2"  />
                    <Setter Property="Focusable" Value="False"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border Name="Border" Padding="0" SnapsToDevicePixels="true" Background="Transparent" BorderBrush="Transparent">
                                    <GridViewRowPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{x:Null}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{x:Null}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </cc:SortableListView.ItemContainerStyle>
            <cc:SortableListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <DockPanel>
                                            <Grid DockPanel.Dock="Bottom" Height="40">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Grid.Column="0" Content="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=uiClickHere}" 
                                                        HorizontalContentAlignment="Left" Height="22" 
                                                        Style="{StaticResource FlatButton}" Margin="8,0,0,0" Command="{Binding Path=DataContext.AddColumnCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"></Button>
                                            </Grid>
                                            <ItemsPresenter />
                                        </DockPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </cc:SortableListView.GroupStyle>
            <cc:SortableListView.View>
                <GridView>
                    <GridViewColumn CellTemplate="{StaticResource RemoveCellTemplate}" Width="Auto"/>
                    <cc:SortableGridViewColumn Width="120" CellTemplate="{StaticResource CellColumnNameTemplate}">
                        <GridViewColumnHeader>
                            <TextBlock Text="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=tbColumnName}" Padding="0,0,10,0" />
                        </GridViewColumnHeader>
                    </cc:SortableGridViewColumn>
                    <cc:SortableGridViewColumn Width="120" CellTemplate="{StaticResource CellDataTypeTemplate}">
                        <GridViewColumnHeader>
                            <TextBlock Text="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=tbDataType}" Padding="0,0,10,0" />
                        </GridViewColumnHeader>
                    </cc:SortableGridViewColumn>
                    <GridViewColumn Width="120" CellTemplate="{StaticResource CellMaxLengthTemplate}">
                        <GridViewColumnHeader>
                            <TextBlock Text="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=tbMaxLength}" Padding="0,0,10,0" />
                        </GridViewColumnHeader>
                    </GridViewColumn>
                    <GridViewColumn Width="60" CellTemplate="{StaticResource CellIsRequiredTemplate}">
                        <GridViewColumnHeader>
                            <TextBlock Text="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=cbIsRequired}" Padding="0,0,10,0"/>
                        </GridViewColumnHeader>
                    </GridViewColumn>
                    <GridViewColumn Width="60" CellTemplate="{StaticResource CellIsRestrictedTemplate}" >
                        <GridViewColumnHeader>
                            <TextBlock Text="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=cbIsRestricted}" Padding="0,0,10,0" />
                        </GridViewColumnHeader>
                    </GridViewColumn>
                    <GridViewColumn Width="200" CellTemplate="{StaticResource CellDefaultValueTemplate}" 
                                    cc:RangeColumn.MinWidth="200"
                                    cc:RangeColumn.IsFillColumn="True">
                        <GridViewColumnHeader>
                            <TextBlock Text="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=tbDefaultValue}" Padding="0,0,10,0" />
                        </GridViewColumnHeader>
                    </GridViewColumn>
                </GridView>
            </cc:SortableListView.View>
        </cc:SortableListView>
        <Border Style="{StaticResource Separator}" Grid.Row="3"/>
        <StackPanel Grid.Row="4" Orientation="Horizontal" FlowDirection="RightToLeft">
            <Button Margin="5" Command="{Binding Path=CloseCommand}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="80" Height="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=btnClose}" Style="{StaticResource ButtonTextStyle}"/>
                            <Image Grid.Column="1" Source="../Resources/Images/close.png" Width="20" Height="20" Margin="5,0,0,0"/>
                        </Grid>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
            <Button Margin="5" Command="{Binding Path=OkCommand}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="80" Height="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Resx ResxName=Ecm.Admin.TableConfigurationView,Key=btnOk}" Style="{StaticResource ButtonTextStyle}"/>
                            <Image Grid.Column="1" Source="../Resources/Images/ok.png" Width="20" Height="20" Margin="5,0,0,0"/>
                        </Grid>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
        </StackPanel>
    </Grid>
</UserControl>
