@model ArchiveMVC.Models.ArchiveAdminModel
@{
    ViewBag.Title = "ContentTypeProperties";
    
}
@section AddToHead
    {
       <script>
           var DataType = @Html.Raw(@Model.TableValue);

       </script>
    }
<div class="sub_properties_content">
    <div class="top_height">
        <div class="sub_properties_between content_type_between">
            <div class="between_content">
                <form action="#" method="post" enctype="multipart/form-data" name="form1" id="form1">
                    <fieldset class="parent_fieldset">
                        <legend>General Info</legend>
                        <div class="between_content_avatar">
                            <div class="image_icon_container">
                                <img id="image_icon" src="~/ArchiveAdmin/GetImageFromCacheByKey?Key=@ViewData["KEY_CACHE_ICON"].ToString()" data-keycache="@ViewData["KEY_CACHE_ICON"].ToString()" />
                            </div>
                            <div class="change_img change_content_icon">Change icon</div>
                        </div>
                        <div class="between_content_info">
                            <div class="between_content_data">
                                <div class="label">Content type name</div>
                                <div class="field content_input_field">
                                    @if(@Model.ArChiveDocTypeModel!=null){
                                        <input type="text" name="content_name" id="content_name" class="archive_input" value="@Model.ArChiveDocTypeModel.Name"/>
                                    }else{
                                        <input type="text" name="content_name" id="content_name" class="archive_input"/>   
                                    }
                                </div>
                            </div>
                            <div class="between_content_data">
                                <div class="label">
                                    @if (@Model.ArChiveDocTypeModel.IsOutlook){
                                         <input type="checkbox" name="outlook_import" id="outlook_import" value="true" checked />
                                    }else{
                                         <input type="checkbox" name="outlook_import" id="outlook_import" value="false"  />
                                    }
                                    <label for="outlook_import">Apply for Outlook import</label>
                                </div>

                            </div>
                        
                        </div>

                    </fieldset>
                </form>
            </div>

        </div>
    </div>
    <div class="down_height">
        <div class="sub_properties_mutli_data">
            <fieldset class="parent_fieldset">
                <legend>Index Fields</legend>
                <div class="multi_data">
                    <table id="table_fields" class="archive_table tablesorter">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Type</th>
                                <th>Required</th>
                                <th>Restricted</th>
                                <th>Has lookup</th>
                                <th>Default value</th>
                                <th>Max lenght</th>
                                <th>Lookup</th>
                            </tr>
                        </thead>
                        <tbody id="table_fields_body">
                            @{ foreach (var field_item in @Model.ArChiveDocTypeModel.Fields)
                               {
                                   if (field_item.IsSystemField == false)
                                   {
                                       <tr id="@field_item.Id" class="row_field">
                                           <td class="td_field_name">@field_item.Name</td>
                                           <td class="td_data_type">@field_item.DataType.ToString()</td>
                                           @if (field_item.IsRequired == false)
                                           {
                                               <td class="td_required" id="@field_item.IsRequired" >No</td> 
                                           }
                                           else
                                           {
                                               <td class="td_required" id="@field_item.IsRequired">Yes</td>
                                           }

                                           @if (field_item.IsRestricted == false)
                                           {
                                               <td class="td_restricted" id="@field_item.IsRestricted">No</td> 
                                           }
                                           else
                                           {
                                               <td class="td_restricted" id="@field_item.IsRestricted">Yes</td>
                                           }

                                           @if (field_item.IsLookup == false)
                                           {
                                               <td class="td_haslookup" id="@field_item.IsLookup">No</td> 
                                           }
                                           else
                                           {
                                               <td class="td_haslookup" id="@field_item.IsLookup">Yes</td>
                                           }
                                             
                                           @if (field_item.UseCurrentDate == true)
                                           {
                                               <td class="td_default_value">{Use current date}</td>
                                           }
                                           else
                                           {
                                               <td class="td_default_value">@field_item.DefaultValue</td>
                                           }
                  
                                           <td class="td_maxlength">@field_item.MaxLength</td>

                                           @if (@field_item.DataType == Ecm.Domain.FieldDataType.String
                                             || @field_item.DataType == Ecm.Domain.FieldDataType.Integer
                                             || @field_item.DataType == Ecm.Domain.FieldDataType.Decimal)
                                           {
                                               <td class="td_lookup"><span class="config_lookup">Configure</span>@if (field_item.IsLookup == true){<span class="delete_lookup"> | Delete</span>}</td>
                                           }
                                           else
                                           {
                                               <td class="td_lookup"></td>
                                           }
                    
                                           @{
                                           string str = "";
                                           foreach (var picklist_item in field_item.Picklists)
                                           {
                                               str = str + picklist_item.Value + "\n";
                                           }
                               
                                               <td class="td_picklist hidden">@str</td>
                               
                                           }
                    
                                         <td class="td_table hidden"></td>
                                      </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div class="multi_button">
                    <div class="button_content">                   
                        <button type="button" id="button_add_field" class="archive_button properties_button">
                            <span>Add</span>
                            <img src="Images/button/appbar.add.32.png" />
                        </button>
                        <button type="button" id="button_edit_field" class="archive_button properties_button">
                            <span>Edit</span>
                            <img src="Images/button/appbar.edit.rest.png" />
                        </button>
                        <button type="button" id="button_delete_field" class="archive_button properties_button">
                            <span>Delete</span>
                            <img src="Images/button/appbar.delete.32.png" />
                        </button>
                    </div>
                </div>
            </fieldset>
        </div>
        <div class="main_button">
            <div class="save_button">
                <button type="button" id="button_save_content" class="archive_button archive_admin_button">
                    <span>Save</span>
                    <img src="Images/button/appbar.save.32.png" />
                </button>
            </div>
            <div class="close_button">
                <button type="button" id="button_cancel_content" class="archive_button archive_admin_button">
                    <span>Close</span>
                    <img src="Images/button/appbar.cancel.png" />
                </button>
            </div>
        </div>
    </div>
</div>
<script>
    @{ 
    foreach (var field_item in @Model.ArChiveDocTypeModel.Fields){
        if(field_item.DataType == Ecm.Domain.FieldDataType.Picklist)
        {
            foreach(ArchiveMVC.Models.PicklistModel item in field_item.Picklists)
            {
            <text>
                var pick = {Id: '@item.Id', FieldId: '@item.FieldId', Value: '@item.Value'};
                pickLists.push(pick);
            </text>
            }
        }
        
        if (field_item.IsLookup)
        {
            <text>
                var connectionInfo = 
                    {
                        "DatabaseType":'@field_item.LookupInfo.ConnectionInfo.DatabaseType',
                        "DatabaseName":'@field_item.LookupInfo.ConnectionInfo.DatabaseName',
                        "Host":'@field_item.LookupInfo.ConnectionInfo.Host',
                        "Username":'@field_item.LookupInfo.ConnectionInfo.Username',
                        "Password":'@field_item.LookupInfo.ConnectionInfo.Password',
                        "Schema":'@field_item.LookupInfo.ConnectionInfo.Schema',
                        "ProviderType":'@field_item.LookupInfo.ConnectionInfo.ProviderType',
                        "Port":'@field_item.LookupInfo.ConnectionInfo.Port'
                    };
    
                var parameters = [];

                @foreach(ArchiveMVC.Models.ParameterModel para in field_item.LookupInfo.Parameters)
                {
                    <text>
                        var p = 
                            {
                                "ParameterName": '@para.ParameterName', 
                                "ParameterValue":'@para.ParameterValue',
                                "ParameterType":'@para.ParameterType',
                                "Mode":'@para.Mode',
                                "OrderIndex":'@para.OrderIndex'
                            };
                    
                        parameters.push(p);
                    </text>
                }
                
                var fieldMaps = [];
                @foreach(ArchiveMVC.Models.LookupMapModel map in field_item.LookupInfo.FieldMappings)
                {
                    <text>
                        var m = 
                            {
                                "ArchiveFieldId": '@map.ArchiveFieldId', 
                                "DataColumn":'@map.DataColumn',
                                "Name":'@map.Name',
                                "FieldId":'@map.FieldId'
                            };
                    
                        fieldMaps.push(m);
                    </text>
                }                
                var info = 
                    {
                        "FieldId":'@field_item.Id', 
                        "LookupType": parseInt(@field_item.LookupInfo.LookupType),
                        "SqlCommand": '@field_item.LookupInfo.SqlCommand',
                        "MaxLookupRow": parseInt(@field_item.LookupInfo.MaxLookupRow),
                        "MinPrefixLength":parseInt(@field_item.LookupInfo.MinPrefixLength),
                        "SourceName":'@field_item.LookupInfo.SourceName',
                        "LookupColumn":'@field_item.LookupInfo.LookupColumn',
                        "LookupOperator":'@field_item.LookupInfo.LookupOperator',
                        "ConnectionInfo":connectionInfo,
                        "Parameters":parameters,
                        "FieldMappings":fieldMaps
                    };

                lookupInfos.push(info);
            </text>
        }
    }
}
</script>